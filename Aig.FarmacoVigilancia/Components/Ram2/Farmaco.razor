@using DataModel.Helper;


<!-- Modal Creat/Edit -->
@if (Data != null)
{
    <div class="modal fade show" id="exampleModal" tabindex="-1" style="display: block;overflow-y: auto;" aria-modal="true" data-backdrop="static" role="dialog" aria-labelledby="staticBackdrop">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">@(Data != null && Data.Id > 0 ? @languageContainerService.Keys["Edit"] : @languageContainerService.Keys["New"]) @languageContainerService.Keys["Fármaco Sospechoso"]</h5>
                    <button type="button" class="close" @onclick="(e)=>{Cancel();}"
                            aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <EditForm Model="@Data" OnValidSubmit="SaveData">
                        <DataAnnotationsValidator />
                        
                        <div class="row clearfix">

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Fármaco Sospechoso (Comercial)"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText class="form-control" @bind-Value="Data.FarmacoSospechosoComercial" />
                                        <ValidationMessage For=@(() => Data.FarmacoSospechosoComercial) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Fármaco Sospechoso (DCI)"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText class="form-control" @bind-Value="Data.FarmacoSospechosoDci" />
                                        <ValidationMessage For=@(() => Data.FarmacoSospechosoDci) />
                                    </div>
                                </div>
                            </div>


                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["ATC"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        @*  <InputText class="form-control" @bind-Value="Data.Atc" />*@
                                        <input type="text" class="form-control" @bind-value="@Data.Atc" @bind-value:event="oninput" @onkeyup="() => OnAtcChanged()">
                                        <ValidationMessage For=@(() => Data.Atc) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Sub-grupo Terapéutico"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText disabled="disabled" class="form-control" @bind-Value="Data.SubGrupoTerapeutico" />
                                        <ValidationMessage For=@(() => Data.SubGrupoTerapeutico) />
                                    </div>
                                </div>
                            </div>
                           

                        </div>
                        
                        <div class="row clearfix">

                             <div class="col-sm-6">
                                <label>@languageContainerService.Keys["Dosis, Frecuencia, Vía de Administración"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText id="active_principles" class="form-control" @bind-Value="Data.ViaAdministracion" />
                                        <ValidationMessage For=@(() => Data.ViaAdministracion) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Indicación"]</label>
                                <div class="form-group">
                                    <InputText class="form-control" @bind-Value="Data.Indicacion" />
                                    <ValidationMessage For=@(() => Data.Indicacion) />
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Fecha de Tratamiento"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDatePicker Max="DateTime.Today" Change="@(args => OnFechaTratamientoChange(args, "Calendar", "MM/dd/yyyy"))" TValue="DateTime?" @bind-Value="Data.FechaTratamiento" ShowTime="false" DateFormat="dd/MM/yyyy" />
                                        <ValidationMessage For=@(() => Data.FechaTratamiento) />
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row clearfix">

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Conducta sobre Dosis"]</label>
                                <div class="form-group">
                                   <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="enumFMV_RAMConductaDosis" Class="form-control" @bind-Value=@Data.ConductaDosis
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMConductaDosis)))
                                                        Change=@(args => {OnConductaDosisChange(args);})>
                                            <Template Context="tContext">
                                                @(DataModel.Helper.Helper.GetDescription(((enumFMV_RAMConductaDosis)tContext)))
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.ConductaDosis) />
                                   </div>
                                    
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Conducta sobre Terapia"]</label>
                                <div class="form-group">
                                   <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="enumFMV_RAMConductaTerapia" Class="form-control" @bind-Value=@Data.ConductaTerapia
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMConductaTerapia)))
                                                        Change=@(args => {OnConductaTerapiaChange(args);})>
                                            <Template Context="tContext">
                                                @(DataModel.Helper.Helper.GetDescription(((enumFMV_RAMConductaTerapia)tContext)))
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.ConductaTerapia) />
                                   </div>
                                    
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <label>@languageContainerService.Keys["Reexposición"]</label>
                                <div class="form-group">
                                   <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="enumOpcionSiNo" Class="form-control" @bind-Value=@Data.Reexposicion
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumOpcionSiNo)))
                                                        Change=@(args => {OnReexposicionChange(args);})>
                                            <Template Context="tContext">
                                                @(DataModel.Helper.Helper.GetDescription(((enumOpcionSiNo)tContext)))
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.Reexposicion) />
                                   </div>
                                  
                                </div>
                            </div>

                        </div>

                        <br>
                        <div class="modal-footer">
                            <button type="submit"
                                    class="btn btn-info waves-effect">
                                @languageContainerService.Keys["Save"]
                            </button>
                            <button type="button" class="btn btn-danger waves-effect"
                            @onclick="(e)=>{Cancel();}">
                                @languageContainerService.Keys["Cancel"]
                            </button>
                        </div>


                    </EditForm>

                </div>


            </div>
        </div>
    </div>


}

