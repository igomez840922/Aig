@using DataModel.Helper;


<!-- Modal Creat/Edit -->
@if (Data != null && LFarmaco != null && LFarmaco.Count > 0)
{
    <div class="modal fade show" id="exampleModal" tabindex="-1" style="display: block;overflow-y: auto;" aria-modal="true" data-backdrop="static" role="dialog" aria-labelledby="staticBackdrop">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">@(
                    Data != null && Data.Id > 0 ? @languageContainerService.Keys["Edit"] : @languageContainerService.Keys["New"]
                            ) @languageContainerService.Keys["Reacción Adversa al Medicamento"]</h5>
                    <button type="button" class="close" @onclick="  (e)=>{Cancel();}"
    aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <EditForm Model="@Data" OnValidSubmit="   SaveData">
                        <DataAnnotationsValidator />

                        <div class="row clearfix">
                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Fármaco Sospechoso"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="DataModel.FMV_RamFarmacoTB" Class="form-control" @bind-Value=@Data.Farmaco
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@LFarmaco>
                                            <Template Context="tContext">
                                                @(string.Format("{0} - {1}", tContext.FarmacoSospechosoComercial, tContext.FarmacoSospechosoDci))
                                                        </Template>
                                                    </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.Farmaco) />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row clearfix">

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["RAM"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText class="form-control" @bind-Value=" Data.Ram" />
                                        <ValidationMessage For=@(() => Data.Ram) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["SOC"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear=" true" TValue="   long?" Class="form-control" @bind-Value=@Data.SocId
    AllowFiltering="   true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
    Data=@lSoc TextProperty="Nombre" ValueProperty="Id"
    Change=@(args => {OnSocChange((args!=null?(long)args:null));}) />

                                        <ValidationMessage For=@(() => Data.SocId) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Término MedDRA"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear=" true" TValue="   long?" Class="form-control" @bind-Value=@Data.TerMedraId
                                                        AllowFiltering="   true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(lTerMedra.Where(x=>x.SocId == Data.SocId)) TextProperty="Nombre" ValueProperty="Id"
                                                        Change=@(args => {OnTerMedraChange((args!=null?(long)args:null));}) />

                                        <ValidationMessage For=@(() => Data.TerMedraId) />
                                       @* <InputText class="form-control" @bind-Value="  Data.TerWhoArt" />
                                        <ValidationMessage For=@(() => Data.TerWhoArt) />*@
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Fecha Inicio de RAM"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        @*<RadzenDatePicker Max=" DateTime.Today"  Change="@(args => OnRAMDateChange(args, "Calendar", "MM/dd/yyyy"))"  TValue="   DateTime?" @bind-Value=" Data.FechaRam" ShowTime="    false" DateFormat="dd/MM/yyyy" />*@
                                        <InputText class="form-control" @bind-Value="Data.FechaRam" />
                                        <ValidationMessage For=@(() => Data.FechaRam) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Fecha Fin de RAM"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        @*<RadzenDatePicker Max=" DateTime.Today" Min="Data.FechaRam" Change="@(args => OnRAMDateChange(args, "Calendar", "MM/dd/yyyy"))" TValue="   DateTime?" @bind-Value=" Data.FechaRamFin" ShowTime="    false" DateFormat="dd/MM/yyyy" />*@
                                        <InputText class="form-control" @bind-Value="Data.FechaRamFin" />
                                        <ValidationMessage For=@(() => Data.FechaRamFin) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Desenlace"]</label>
                                <div class="form-group">
                                  <div class="form-line">
                                        <RadzenDropDown AllowClear=" false" TValue="  enumFMV_RAMDesenlace" Class="form-control" @bind-Value=@Data.Desenlace
                                                        AllowFiltering="  true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMDesenlace)))>
                                            <Template Context="tContext">
                                                @(
                                                    DataModel.Helper.Helper.GetDescription(tContext)
                                                    )
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.Desenlace) />
                                  </div>
                                   
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Evolución sobre Dosis"]</label>
                                <div class="form-group">
                                   <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="  enumFMV_RAMEvolucionDosis" Class="form-control" @bind-Value=@Data.EvoDosis
                                                        AllowFiltering="  true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMEvolucionDosis))) Change=@(args => {OnEvoDosisChange(args);})>
                                            <Template Context="tContext">
                                                @(
                                                    DataModel.Helper.Helper.GetDescription(tContext)
                                                    )
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.EvoDosis) />
                                   </div>
                                   
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Evolución sobre Terapia"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="  false" TValue="enumFMV_RAMEvolucionTerapia" Class="form-control" @bind-Value=@Data.EvoTerapia
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMEvolucionTerapia))) Change=@(args => {OnEvoTerapiaChange(args);})>
                                            <Template Context="tContext">
                                                @(
                                                    DataModel.Helper.Helper.GetDescription(tContext)
                                                    )
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.EvoTerapia) />
                                    </div>
                                    
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Consecuencia de Reexposición"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue=" enumFMV_RAMConsecuenciaReexposicion" Class="form-control" @bind-Value=@Data.ConReexposicion
                                                        AllowFiltering="  true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumFMV_RAMConsecuenciaReexposicion))) Change=@(args => {OnConReexposicionChange(args);})>
                                            <Template Context="tContext">
                                                @(
                                                    DataModel.Helper.Helper.GetDescription(tContext)
                                                    )
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.ConReexposicion) />
                                    </div>
                                    
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["RAM con una sola dosis"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue=" enumOpcionSiNo" Class="form-control" @bind-Value=@Data.RamUnaDosis
                                                        AllowFiltering="  true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(Enum.GetValues(typeof(enumOpcionSiNo)))>
                                            <Template Context="tContext">
                                                @(
                                                    DataModel.Helper.Helper.GetDescription(tContext)
                                                    )
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.RamUnaDosis) />
                                    </div>                                    
                                </div>
                            </div>


                        </div>

                        <br>
                        <div class="modal-footer">
                            <button type="submit"
                            class="btn btn-info waves-effect">
                                @languageContainerService.Keys["Save"]
                            </button>
                            <button type="button" class="btn btn-danger waves-effect"
                            @onclick="  (e)=>{Cancel();}">
                                @languageContainerService.Keys["Cancel"]
                            </button>
                        </div>


                    </EditForm>

                </div>


            </div>
        </div>
    </div>
}

