@using DataModel.Helper;


<!-- Modal Creat/Edit -->
@if (Data != null && LVacunas?.Count > 0)
{
    <div class="modal fade show" id="exampleModal" tabindex="-1" style="display: block;overflow-y: auto;" aria-modal="true" data-backdrop="static" role="dialog" aria-labelledby="staticBackdrop">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">
                        @(
                            Data != null && Data.Id > 0 ? @languageContainerService.Keys["Edit"] : @languageContainerService.Keys["New"]
                            ) @languageContainerService.Keys["ESAVI"]
                    </h5>
                    <button type="button" class="close" @onclick="  (e)=>{Cancel();}"
                            aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <EditForm Model="@Data" OnValidSubmit="SaveData">
                        <DataAnnotationsValidator />

                        <div class="row clearfix">
                            <div class="col-sm-9">
                                <label>@languageContainerService.Keys["Vacuna Sospechosa"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="false" TValue="DataModel.FMV_EsaviVacunaTB" Class="form-control" @bind-Value=@Data.EsaviVacuna
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@LVacunas>
                                            <Template Context="tContext">
                                                @(string.Format("{0} - {1}", tContext.VacunaComercial, tContext.TipoVacuna?.Nombre))
                                            </Template>
                                        </RadzenDropDown>
                                        <ValidationMessage For=@(() => Data.EsaviVacuna) />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row clearfix">

                            <div class="col-sm-4">
                                <label for="password">
                                    @languageContainerService.Keys["Hay ESAVI?"]
                                </label>
                                <div class="form-group">
                                    <InputSelect @bind-Value="Data.HayEsavi" class="form-control">
                                        @foreach (enumFMV_EsaviClasificacion dt in Enum.GetValues(typeof(enumFMV_EsaviClasificacion)))
                                        {
                                            <option value="@dt">@(DataModel.Helper.Helper.GetDescription(dt))</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For=@(() => Data.HayEsavi) />
                                </div>
                            </div>

                            <div class="col-sm-8">
                                <label>@languageContainerService.Keys["ESAVI"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <InputText class="form-control" @bind-Value="Data.EsaviDescripcion" />
                                        <ValidationMessage For=@(() => Data.EsaviDescripcion) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>
                                    @languageContainerService.Keys["Fecha de ESAVI"]
                                </label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDatePicker Max="DateTime.Today" TValue="DateTime?" @bind-Value="Data.FechaEsavi" ShowTime="false" DateFormat="dd/MM/yyyy" />
                                        <ValidationMessage For=@(() => Data.FechaEsavi) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label for="password">
                                    @languageContainerService.Keys["Desenlace"]
                                </label>
                                <div class="form-group">
                                    <InputSelect @bind-Value="Data.Desenlace" class="form-control">
                                        @foreach (enumFMV_RAMDesenlace dt in Enum.GetValues(typeof(enumFMV_RAMDesenlace)))
                                        {
                                            <option value="@dt">@(DataModel.Helper.Helper.GetDescription(dt))</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For=@(() => Data.Desenlace) />
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["SOC"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear=" true" TValue="   long?" Class="form-control" @bind-Value=@Data.SocId
                                                        AllowFiltering="   true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@lSoc TextProperty="Nombre" ValueProperty="Id"
                                                        Change=@(args => {OnSocChange((args!=null?(long)args:null));}) />

                                        <ValidationMessage For=@(() => Data.SocId) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Término MedDRA"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear=" true" TValue="   long?" Class="form-control" @bind-Value=@Data.TerMedraId
                                                        AllowFiltering="   true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@(lTerMedra.Where(x=>x.SocId == Data.SocId)) TextProperty="Nombre" ValueProperty="Id"
                                                        Change=@(args => {OnTerMedraChange((args!=null?(long)args:null));}) />

                                        <ValidationMessage For=@(() => Data.TerMedraId) />
                                        @* <InputText class="form-control" @bind-Value="  Data.TerWhoArt" />
                                    <ValidationMessage For=@(() => Data.TerWhoArt) />*@
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Intensidad de la ESAVI"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        <RadzenDropDown AllowClear="true" TValue="long?" Class="form-control" @bind-Value=@Data.IntensidadEsaviId
                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                        Data=@lintensidad TextProperty="FullName" ValueProperty="Id"
                                                        Change=@(args => {OnIntensidadChange((args!=null?(long)args:null));}) />
                                        <ValidationMessage For=@(() => Data.IntensidadEsaviId) />
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <label>@languageContainerService.Keys["Gravedad"]</label>
                                <div class="form-group">
                                    <div class="form-line">
                                        @*<InputText class="form-control" @bind-Value="Data.Gravedad" @bind-value:event="oninput" @onkeyup="() => OnAtcChanged()"/>*@
                                        <input type="text" class="form-control" @bind-value="@Data.Gravedad" @bind-value:event="oninput" @onkeyup="() => CheckOtrosCritSeleccion()">
                                        <ValidationMessage For=@(() => Data.Gravedad) />
                                    </div>
                                </div>
                            </div>

                        </div>

                        <br>
                        <div class="modal-footer">
                            <button type="submit"
                                    class="btn btn-info waves-effect">
                                @languageContainerService.Keys["Save"]
                            </button>
                            <button type="button" class="btn btn-danger waves-effect"
                            @onclick="  (e)=>{Cancel();}">
                                @languageContainerService.Keys["Cancel"]
                            </button>
                        </div>


                    </EditForm>

                </div>


            </div>
        </div>
    </div>
}

