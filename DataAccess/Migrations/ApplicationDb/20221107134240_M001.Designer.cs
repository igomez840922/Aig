// <auto-generated />
using System;
using DataAccess.FarmacoVigilancia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221107134240_M001")]
    partial class M001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("UserProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserRoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserProfileId")
                        .IsUnique()
                        .HasFilter("[UserProfileId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DataModel.AttachmentTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AbsolutePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InspeccionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("InspeccionId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AreaControlado")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Clasificacion")
                        .HasColumnType("int");

                    b.Property<string>("CorregidorNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("CorregimientoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("DistritoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1NumRegistro")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1Sector")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1VMedico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2NumRegistro")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2Sector")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2VMedico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDuplicado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpedida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigenciaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigenciaIni")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("HorariosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NoMaquina")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NombreSociedad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumLicencia")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<long?>("ProvinciaId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("RepLegalCedula")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RepLegalNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("SolicitanteLicCedula")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SolicitanteLicNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TipoActividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEstablecimiento")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CorregimientoId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("AUD_EstablecimientoTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperCambUbicFarmTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("ReciboPago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoInspeccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspAperCambUbicFarmTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AvisoOperación")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EstablecimientoId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmaDNFD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaDNFD8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaEstablec1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaEstablec2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InspAperCambUbicFarmId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspRetiroRetencionId")
                        .HasColumnType("bigint");

                    b.Property<int>("IntNumActa")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumActa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumRegDNFD1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumRegDNFD2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticEstablecimiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ParticEstablecimientoCIP")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticEstablecimientoCargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticEstablecimientoEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticipantesDNFD")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RepreLegal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RepreLegalIdentificacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("StatusInspecciones")
                        .HasColumnType("int");

                    b.Property<int>("TipoActa")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionEstablecimiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstablecimientoId");

                    b.HasIndex("InspAperCambUbicFarmId");

                    b.HasIndex("InspRetiroRetencionId")
                        .IsUnique()
                        .HasFilter("[InspRetiroRetencionId] IS NOT NULL");

                    b.ToTable("AUD_InspeccionTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspRetiroRetencionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("RetiroRetencionType")
                        .HasColumnType("int");

                    b.Property<string>("SeccionOficinaRegional")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspRetiroRetencionTB");
                });

            modelBuilder.Entity("DataModel.AUD_ProdRetiroRetencionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CantidadRetenida")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CantidadRetirada")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Destino")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("FechaExp")
                        .HasColumnType("datetime2");

                    b.Property<long>("FrmRetiroRetencionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Lote")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Pais")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PresentacionComercial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RegSanitario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FrmRetiroRetencionId");

                    b.ToTable("AUD_ProdRetiroRetencionTB");
                });

            modelBuilder.Entity("DataModel.CorregimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("DistritoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.ToTable("Corregimiento");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("DataModel.FMV_AlertaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ActualizaMonografias")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsentFirmado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DCI")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEntregaEvaluador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("NumNota")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrigenAlertaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("OtrasConsideraciones")
                        .HasColumnType("bit");

                    b.Property<string>("Producto")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("RecomProfPaciente")
                        .HasColumnType("bit");

                    b.Property<bool>("SuspencCancelRegSanitario")
                        .HasColumnType("bit");

                    b.Property<bool>("SuspencionRetiroLote")
                        .HasColumnType("bit");

                    b.Property<int>("TipoAlerta")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("OrigenAlertaId");

                    b.ToTable("Alerta");
                });

            modelBuilder.Entity("DataModel.FMV_IpsTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ConfecConNormativa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("EstatusRecepcion")
                        .HasColumnType("int");

                    b.Property<int>("EstatusRegistro")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaAsigEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistrador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRev")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("IpsData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NoInforme")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomComercial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PrincActivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Prioridad")
                        .HasColumnType("bit");

                    b.Property<string>("RegSanitario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("RegistradorId")
                        .HasColumnType("bigint");

                    b.Property<int>("ResumenEjec")
                        .HasColumnType("int");

                    b.Property<int>("ResumenEjecTrad")
                        .HasColumnType("int");

                    b.Property<int>("StatusRevision")
                        .HasColumnType("int");

                    b.Property<long?>("TramitadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("RegistradorId");

                    b.HasIndex("TramitadorId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("DataModel.FMV_NotaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destinatario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InstitucionDestinoId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumNota")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoNota")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionDestinoId");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("DataModel.FMV_OrigenAlertaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrigenAlerta");
                });

            modelBuilder.Entity("DataModel.FMV_PmrProductoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NomComercial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("PmrId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegSanitario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("PmrId");

                    b.ToTable("Ram");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntregaEvaluador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTramite")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("PrincActivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.ToTable("PmrTB");
                });

            modelBuilder.Entity("DataModel.FMV_RfvTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DireccionFisica")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaNotificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TipoUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Rfv");
                });

            modelBuilder.Entity("DataModel.InstitucionDestinoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InstitucionDestino");
                });

            modelBuilder.Entity("DataModel.LaboratorioTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Pais")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoLaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("TipoUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("DataModel.PaisTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("DataModel.PersonalTrabajadorTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("Evaluador")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Registrador")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Tramitador")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonalTrabajador");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("DataModel.SmtpCorreoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("SmtpPuerto")
                        .HasColumnType("int");

                    b.Property<string>("SmtpServidor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("SmtpCorreo");
                });

            modelBuilder.Entity("DataModel.UserProfileTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Languanje")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecondSurName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SureName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataModel.ApplicationUser", b =>
                {
                    b.HasOne("DataModel.UserProfileTB", "UserProfile")
                        .WithOne("AppUser")
                        .HasForeignKey("DataModel.ApplicationUser", "UserProfileId");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DataModel.AttachmentTB", b =>
                {
                    b.HasOne("DataModel.AUD_InspeccionTB", "Inspeccion")
                        .WithMany("LAttachments")
                        .HasForeignKey("InspeccionId");

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.HasOne("DataModel.CorregimientoTB", "Corregimiento")
                        .WithMany()
                        .HasForeignKey("CorregimientoId");

                    b.HasOne("DataModel.DistritoTB", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corregimiento");

                    b.Navigation("Distrito");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.HasOne("DataModel.AUD_EstablecimientoTB", "Establecimiento")
                        .WithMany("LInspections")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.AUD_InspAperCambUbicFarmTB", "InspAperCambUbicFarm")
                        .WithMany()
                        .HasForeignKey("InspAperCambUbicFarmId");

                    b.HasOne("DataModel.AUD_InspRetiroRetencionTB", "InspRetiroRetencion")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspRetiroRetencionId");

                    b.Navigation("Establecimiento");

                    b.Navigation("InspAperCambUbicFarm");

                    b.Navigation("InspRetiroRetencion");
                });

            modelBuilder.Entity("DataModel.AUD_ProdRetiroRetencionTB", b =>
                {
                    b.HasOne("DataModel.AUD_InspRetiroRetencionTB", "FrmRetiroRetencion")
                        .WithMany("LProductos")
                        .HasForeignKey("FrmRetiroRetencionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrmRetiroRetencion");
                });

            modelBuilder.Entity("DataModel.CorregimientoTB", b =>
                {
                    b.HasOne("DataModel.DistritoTB", "Distrito")
                        .WithMany("LCorregimientos")
                        .HasForeignKey("DistritoId");

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LDistritos")
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DataModel.FMV_AlertaTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LAlertas")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.FMV_OrigenAlertaTB", "OrigenAlerta")
                        .WithMany("LAlertas")
                        .HasForeignKey("OrigenAlertaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("OrigenAlerta");
                });

            modelBuilder.Entity("DataModel.FMV_IpsTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LIpsEvaluador")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LIps")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.PersonalTrabajadorTB", "Registrador")
                        .WithMany("LIpsRegistrador")
                        .HasForeignKey("RegistradorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.PersonalTrabajadorTB", "Tramitador")
                        .WithMany("LIpsTramitador")
                        .HasForeignKey("TramitadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("Laboratorio");

                    b.Navigation("Registrador");

                    b.Navigation("Tramitador");
                });

            modelBuilder.Entity("DataModel.FMV_NotaTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LNotas")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany("LNotas")
                        .HasForeignKey("InstitucionDestinoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");
                });

            modelBuilder.Entity("DataModel.FMV_PmrProductoTB", b =>
                {
                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LProductos")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.FMV_PmrTB", "Pmr")
                        .WithMany("LProductos")
                        .HasForeignKey("PmrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Pmr");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LPmr")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");
                });

            modelBuilder.Entity("DataModel.FMV_RfvTB", b =>
                {
                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LRfv")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.HasOne("DataModel.PaisTB", "Pais")
                        .WithMany("LProvincia")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.Navigation("LInspections");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.Navigation("LAttachments");
                });

            modelBuilder.Entity("DataModel.AUD_InspRetiroRetencionTB", b =>
                {
                    b.Navigation("Inspeccion");

                    b.Navigation("LProductos");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.Navigation("LCorregimientos");
                });

            modelBuilder.Entity("DataModel.FMV_OrigenAlertaTB", b =>
                {
                    b.Navigation("LAlertas");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.Navigation("LProductos");
                });

            modelBuilder.Entity("DataModel.InstitucionDestinoTB", b =>
                {
                    b.Navigation("LNotas");
                });

            modelBuilder.Entity("DataModel.LaboratorioTB", b =>
                {
                    b.Navigation("LIps");

                    b.Navigation("LProductos");

                    b.Navigation("LRfv");
                });

            modelBuilder.Entity("DataModel.PaisTB", b =>
                {
                    b.Navigation("LProvincia");
                });

            modelBuilder.Entity("DataModel.PersonalTrabajadorTB", b =>
                {
                    b.Navigation("LAlertas");

                    b.Navigation("LIpsEvaluador");

                    b.Navigation("LIpsRegistrador");

                    b.Navigation("LIpsTramitador");

                    b.Navigation("LNotas");

                    b.Navigation("LPmr");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.Navigation("LDistritos");
                });

            modelBuilder.Entity("DataModel.UserProfileTB", b =>
                {
                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
