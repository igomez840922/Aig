// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221216061831_M029")]
    partial class M029
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModel.ActividadEstablecimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActividadEstablecimiento");
                });

            modelBuilder.Entity("DataModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("UserProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserRoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserProfileId")
                        .IsUnique()
                        .HasFilter("[UserProfileId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DataModel.AttachmentTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AbsolutePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InspeccionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("InspeccionId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AreaControlado")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AvisoOperaciones")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Clasificacion")
                        .HasColumnType("int");

                    b.Property<string>("CorregidorNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("CorregimientoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("DistritoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1NumRegistro")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1Sector")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac1VMedico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2NumRegistro")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2Sector")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Farmac2VMedico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDuplicado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpedida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigenciaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVigenciaIni")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("HorariosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NoMaquina")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NombreSociedad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumLicencia")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("RepLegalCedula")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RepLegalNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("SolicitanteLicCedula")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SolicitanteLicNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TipoActividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEstablecimiento")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CorregimientoId");

                    b.HasIndex("DistritoId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("AUD_Establecimiento");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperCambUbicAgenTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosActProd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAtendidosPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosCondicionesLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("ReciboPago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspAperCambUbicAgen");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperCambUbicFarmTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosAreaAlmacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaFisica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaProductosControlados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAtendidosPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstructuraOrganizacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosInfraEstructura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosPreguntasGenericas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosSenalizacionAvisos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("ReciboPago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspAperCambUbicFarm");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperFabricanteTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosAreaAlmacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaAuxiliares")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaDispensado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaExterna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaInterna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaLabCtrCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAreaProduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAutoInspeccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosDocumentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEquipos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosProcedimientoPrograma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosProdAnalisisContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosReclamoProductoRetirado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("TipoProductos")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspAperFabricante");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperturaCosmetArtesanalTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AreaAlmacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Documentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inconformidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspAperturaCosmetArtesanalTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspCierreOperacionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosResponsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DestinoProductos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionUbicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolicitudCierre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspCierreOperacionTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspDisposicionFinalTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Adjunta")
                        .HasColumnType("bit");

                    b.Property<bool>("Coincide")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosResponsable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventarioMedicamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumNotaSDGSA")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumReciboPago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("PesoDestruir")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SolicitudCierre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoInspeccion")
                        .HasColumnType("int");

                    b.Property<int>("TipoProduct")
                        .HasColumnType("int");

                    b.Property<int>("TipoVerificacion")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspDisposicionFinalTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AvisoOperacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EstablecimientoId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InspAperCambUbicAgenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspAperCambUbicFarmId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspAperFabricanteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspAperturaCosmetArtesanalId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspCierreOperacionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspDisposicionFinalId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspGuiBPMFabCosmeticoMedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspGuiBPMFabNatMedicinaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspGuiaBPMFabricanteMedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspInvestigacionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspRetiroRetencionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspRutinaVigAgenciaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InspRutinaVigFarmaciaId")
                        .HasColumnType("bigint");

                    b.Property<int>("IntNumActa")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumActa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticEstablecimiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ParticEstablecimientoCIP")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticEstablecimientoCargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ParticEstablecimientoEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RepreLegal")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RepreLegalIdentificacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("StatusInspecciones")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoEstablecimiento")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoActa")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionEstablecimiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstablecimientoId");

                    b.HasIndex("InspAperCambUbicAgenId")
                        .IsUnique()
                        .HasFilter("[InspAperCambUbicAgenId] IS NOT NULL");

                    b.HasIndex("InspAperCambUbicFarmId")
                        .IsUnique()
                        .HasFilter("[InspAperCambUbicFarmId] IS NOT NULL");

                    b.HasIndex("InspAperFabricanteId")
                        .IsUnique()
                        .HasFilter("[InspAperFabricanteId] IS NOT NULL");

                    b.HasIndex("InspAperturaCosmetArtesanalId")
                        .IsUnique()
                        .HasFilter("[InspAperturaCosmetArtesanalId] IS NOT NULL");

                    b.HasIndex("InspCierreOperacionId")
                        .IsUnique()
                        .HasFilter("[InspCierreOperacionId] IS NOT NULL");

                    b.HasIndex("InspDisposicionFinalId")
                        .IsUnique()
                        .HasFilter("[InspDisposicionFinalId] IS NOT NULL");

                    b.HasIndex("InspGuiBPMFabCosmeticoMedId")
                        .IsUnique()
                        .HasFilter("[InspGuiBPMFabCosmeticoMedId] IS NOT NULL");

                    b.HasIndex("InspGuiBPMFabNatMedicinaId")
                        .IsUnique()
                        .HasFilter("[InspGuiBPMFabNatMedicinaId] IS NOT NULL");

                    b.HasIndex("InspGuiaBPMFabricanteMedId")
                        .IsUnique()
                        .HasFilter("[InspGuiaBPMFabricanteMedId] IS NOT NULL");

                    b.HasIndex("InspInvestigacionId")
                        .IsUnique()
                        .HasFilter("[InspInvestigacionId] IS NOT NULL");

                    b.HasIndex("InspRetiroRetencionId")
                        .IsUnique()
                        .HasFilter("[InspRetiroRetencionId] IS NOT NULL");

                    b.HasIndex("InspRutinaVigAgenciaId")
                        .IsUnique()
                        .HasFilter("[InspRutinaVigAgenciaId] IS NOT NULL");

                    b.HasIndex("InspRutinaVigFarmaciaId")
                        .IsUnique()
                        .HasFilter("[InspRutinaVigFarmaciaId] IS NOT NULL");

                    b.ToTable("AUD_Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiaBPMFabricanteMedTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Almacenes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaAcondicionamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaDispMatPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaProduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditoriaSanitaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoInspecAuditCal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasifActComerciales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasifEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Documentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdifInstalaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquiposGeneralidades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabProdFarmEsteril_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabProdFarmEsteril_A2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabProdFarmEsteril_A3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabProdFarmEsteril_Gen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaUltimaVista")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GarantiaCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lactamicos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatProducts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizacionPersonal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtrosFuncionarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcesoVigilanciaSanit")
                        .HasColumnType("int");

                    b.Property<string>("ProdAnalisisContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdCitostatico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Produccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuejasReclamos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegenteFarmaceutico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequisitosLegales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespControlCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespProduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValGenerales")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspGuiaBPMFabricanteMedTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiBPMFabCosmeticoMedTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AlmacenMatAcondicionamineto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlmacenMateriaPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlmacenProductoTerminado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnalisisContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaDispensionOrdFab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaEnvasado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaEtiquetadoEmpaque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOrganizaDocumentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaProdCondExternas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaProdCondInternas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaRecepMateriaPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditoriaSanitaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalibraVerifEquipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasifActComerciales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasifEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasifEstablecimiento2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondExtAlmacenas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondIntAlmacenas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("DistProductoTerminado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabCosmeticos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabPlaguicida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabProdDesinfectante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaUltimaVista")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GenEstructuraOrganizativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspeccionAudito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabControlCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManejoQuejaReclamos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MantAreaEquipos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsmosisInversa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtrosFuncionarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcesoVigilanciaSanit")
                        .HasColumnType("int");

                    b.Property<string>("ProductoDevueltoRechazado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepProductoTerminado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegenteFarmaceutico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequisitosLegales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespControlCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespProduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetiroProcMercado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SistemaDeIonizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SistemaInstAgua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Validaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspGuiBPMFabCosmeticoMedTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiBPMFabNatMedicinaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Almacenes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaAuxiliares")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaControlCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaDispensadoMatPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaEnvasadoEmpaque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaProduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaRecepLimpieza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaSecadoMolienda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditoriaCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditoriaSanitaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthFuncionamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calibracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacitacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contratante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contratista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("DispensadoMatPrima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentosExigido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estabilidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GarantiaCalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generalidades9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HigieneSalud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoGeneral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatAcondicionamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialesReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodologiaAnalitica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoInspeccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Muestreo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtrosFuncionarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedimientoReg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdAGranel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdControlProceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdDevueltos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdRechazados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdTerminados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegenteFarmaceutico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponPersonal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Retiros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SistemaAgua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SistemaAire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UbicacionDisenoConstruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspGuiBPMFabNatMedicinaTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspInvestigacionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AdjuntaActaRetencion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosAtendidosPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DetalleInspeccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetalleVerificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspInvestigacionTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspRetiroRetencionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosAtendidosPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("RetiroRetencionType")
                        .HasColumnType("int");

                    b.Property<string>("SeccionOficinaRegional")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspRetiroRetencion");
                });

            modelBuilder.Entity("DataModel.AUD_InspRutinaVigAgenciaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActividadDistribucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaAlmCadenaFrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaAlmacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaDespachoProductos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaDesperdicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaProdDevueltos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaRecepProductos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaSustanciasControladas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("GenEstablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralesEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventarioAlAzar")
                        .HasColumnType("int");

                    b.Property<int>("InventarioCompleto")
                        .HasColumnType("int");

                    b.Property<string>("InventarioMedicamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedimientos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspRutinaVigAgenciaTB");
                });

            modelBuilder.Entity("DataModel.AUD_InspRutinaVigFarmaciaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosAlmacenProductosFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosAnuncioFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosConclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEquipoRegistroFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosEstructuraFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosExpedienteColaborador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosFarmaceutico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosGeneralesFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosPersonalTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosProcedimientoFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegMovimientoExistenciaFarmacia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRegente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatosRepresentLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_InspRutinaVigFarmaciaTB");
                });

            modelBuilder.Entity("DataModel.AUD_ProdRetiroRetencionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CantidadRetenida")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CantidadRetirada")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Destino")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("FechaExp")
                        .HasColumnType("datetime2");

                    b.Property<long>("FrmRetiroRetencionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Pais")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PresentacionComercial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RegSanitario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FrmRetiroRetencionId");

                    b.ToTable("AUD_ProdRetiroRetencion");
                });

            modelBuilder.Entity("DataModel.AUD_TipoEstablecimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoEstablecimiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AUD_TipoEstablecimiento");
                });

            modelBuilder.Entity("DataModel.CorregimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("DistritoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.ToTable("Corregimiento");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("DataModel.FMV_AlertaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ActualizaMonografias")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsentFirmado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DCI")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEntregaEvaluador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("NumNota")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrigenAlertaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("OtrasConsideraciones")
                        .HasColumnType("bit");

                    b.Property<string>("Producto")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("RecomProfPaciente")
                        .HasColumnType("bit");

                    b.Property<bool>("SuspencCancelRegSanitario")
                        .HasColumnType("bit");

                    b.Property<bool>("SuspencionRetiroLote")
                        .HasColumnType("bit");

                    b.Property<int>("TipoAlerta")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("OrigenAlertaId");

                    b.ToTable("FMV_Alerta");
                });

            modelBuilder.Entity("DataModel.FMV_EsaviNotificacionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Desenlace")
                        .HasColumnType("int");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("DosisEsavi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DosisViaAdmin")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ElegibilidadGravedad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ElegibilidadOtroCriterio")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ElegibleEvaluacionCausal")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EsaviDescripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("EsaviId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEsavi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVacunacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Gravedad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("HayEsavi")
                        .HasColumnType("int");

                    b.Property<string>("Indicaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("IntensidadEsaviId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Lote")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OtrosCriterios")
                        .HasColumnType("int");

                    b.Property<int>("ProbabilidadAsociacion")
                        .HasColumnType("int");

                    b.Property<string>("RegSanitario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Soc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SocId")
                        .HasColumnType("bigint");

                    b.Property<string>("TerminoWhoArt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("TipoVacunaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VacunaComercial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EsaviId");

                    b.HasIndex("IntensidadEsaviId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("TipoVacunaId");

                    b.ToTable("FMV_EsaviNotificacion");
                });

            modelBuilder.Entity("DataModel.FMV_EsaviTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cedula")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CodCNFV")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodExt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodigoNotiFacedra")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosLab")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DetallesCaso")
                        .HasColumnType("int");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEntregaEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvalua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecibidoCNFV")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("HistoriaClinica")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IdFacedra")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InicialesPersona")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("InstitucionId")
                        .HasColumnType("bigint");

                    b.Property<string>("MedicamentoContaminante")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NombreCompletoPersona")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrigenNotificacion")
                        .HasColumnType("int");

                    b.Property<string>("OtrosDiagnosticos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<long?>("TipoInstitucionId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoNotificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("FMV_Esavi");
                });

            modelBuilder.Entity("DataModel.FMV_FfTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ATC")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Atc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodCNFV")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodExt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FallaReportada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaEntregaEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvalua")
                        .HasColumnType("datetime2");

                    b.Property<string>("FechaExp")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaRecibidoCNFV")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTramite")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("IncidenciaCaso")
                        .HasColumnType("int");

                    b.Property<long?>("InstitucionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Lote")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NombreDci")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Notificador")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OtrasEspecificaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegSanitario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ResolEmitidas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SubGrupoTerapeutico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("TipoInstitucionId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoNotificador")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("FMV_Ff");
                });

            modelBuilder.Entity("DataModel.FMV_FtTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ATC")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Atc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodCNFV")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodExt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatosPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("EvaluacionCausalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaEntregaEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvalua")
                        .HasColumnType("datetime2");

                    b.Property<string>("FechaExp")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaRecibidoCNFV")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTramite")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("IncidenciaCaso")
                        .HasColumnType("int");

                    b.Property<long?>("InstitucionDestinoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InstitucionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Lote")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NombreDci")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Notificador")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OtrasEspecificaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegSanitario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ResolEmitidas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SubGrupoTerapeutico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("TipoInstitucionId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoNotificador")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionDestinoId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("FMV_Ft");
                });

            modelBuilder.Entity("DataModel.FMV_IpsTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ConfecConNormativa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("EstatusRecepcion")
                        .HasColumnType("int");

                    b.Property<int>("EstatusRegistro")
                        .HasColumnType("int");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaAsigEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistrador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRev")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("IpsData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NoInforme")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomComercial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PrincActivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Prioridad")
                        .HasColumnType("bit");

                    b.Property<string>("RegSanitario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("RegistradorId")
                        .HasColumnType("bigint");

                    b.Property<int>("ResumenEjec")
                        .HasColumnType("int");

                    b.Property<int>("ResumenEjecTrad")
                        .HasColumnType("int");

                    b.Property<int>("StatusRevision")
                        .HasColumnType("int");

                    b.Property<long?>("TramitadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("RegistradorId");

                    b.HasIndex("TramitadorId");

                    b.ToTable("MV_Ips");
                });

            modelBuilder.Entity("DataModel.FMV_NotaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destinatario")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("InstitucionDestinoId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumNota")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoNota")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionDestinoId");

                    b.ToTable("FMV_Nota");
                });

            modelBuilder.Entity("DataModel.FMV_OrigenAlertaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FMV_OrigenAlerta");
                });

            modelBuilder.Entity("DataModel.FMV_PmrProductoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NomComercial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("PmrId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegSanitario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("PmrId");

                    b.ToTable("FMV_PmrProducto");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntregaEvaluador")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTramite")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("PrincActivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.ToTable("FMV_Pmr");
                });

            modelBuilder.Entity("DataModel.FMV_RamNotificacionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CodExterno")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("NombreOrgInst")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumIngresoVigiflow")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProvRegionOrigen")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("RamId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoNotificador")
                        .HasColumnType("int");

                    b.Property<int>("TipoOrgInst")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RamId");

                    b.ToTable("FMV_RamNotificacion");
                });

            modelBuilder.Entity("DataModel.FMV_RamTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccionesRegulatoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Atc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Atc2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodExterno")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodigoCNFV")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodigoNotiFacedra")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("EvaluacionCalidadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluacionCausalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EvaluadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("FarmacoSospechosoComercial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FarmacoSospechosoDci")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("FechaEntregaEva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecibidoCNFV")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("IdFacedra")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("InstitucionId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumIngresoVigiflow")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionInfoNotifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<int>("RamOrigenType")
                        .HasColumnType("int");

                    b.Property<int>("RamType")
                        .HasColumnType("int");

                    b.Property<string>("SubGrupoTerapeutico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("TipoInstitucionId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoNotificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluadorId");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("FMV_Ram");
                });

            modelBuilder.Entity("DataModel.FMV_RfvTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DireccionFisica")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaNotificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<long?>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonos")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TipoUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("FMV_Rfv");
                });

            modelBuilder.Entity("DataModel.FMV_SocTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FMV_Soc");
                });

            modelBuilder.Entity("DataModel.InstitucionDestinoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ProvinciaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TipoInstitucionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("InstitucionDestino");
                });

            modelBuilder.Entity("DataModel.IntensidadEsaviTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Gravedad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IntensidadEsavi");
                });

            modelBuilder.Entity("DataModel.LaboratorioTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Pais")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TipoLaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("TipoUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("DataModel.PaisTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("DataModel.PersonalTrabajadorTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("Evaluador")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Registrador")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Tramitador")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonalTrabajador");
                });

            modelBuilder.Entity("DataModel.ProductoEstablecimientoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductoEstablecimiento");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("DataModel.SmtpCorreoTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<int>("SmtpPuerto")
                        .HasColumnType("int");

                    b.Property<string>("SmtpServidor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("SmtpCorreo");
                });

            modelBuilder.Entity("DataModel.TipoInstitucionTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.TipoVacunaTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoVacuna");
                });

            modelBuilder.Entity("DataModel.UserProfileTB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("FromSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Languanje")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecondSurName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SureName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataModel.ApplicationUser", b =>
                {
                    b.HasOne("DataModel.UserProfileTB", "UserProfile")
                        .WithOne("AppUser")
                        .HasForeignKey("DataModel.ApplicationUser", "UserProfileId");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DataModel.AttachmentTB", b =>
                {
                    b.HasOne("DataModel.AUD_InspeccionTB", "Inspeccion")
                        .WithMany("LAttachments")
                        .HasForeignKey("InspeccionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.HasOne("DataModel.CorregimientoTB", "Corregimiento")
                        .WithMany()
                        .HasForeignKey("CorregimientoId");

                    b.HasOne("DataModel.DistritoTB", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId");

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Corregimiento");

                    b.Navigation("Distrito");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.HasOne("DataModel.AUD_EstablecimientoTB", "Establecimiento")
                        .WithMany("LInspections")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataModel.AUD_InspAperCambUbicAgenTB", "InspAperCambUbicAgen")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspAperCambUbicAgenId");

                    b.HasOne("DataModel.AUD_InspAperCambUbicFarmTB", "InspAperCambUbicFarm")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspAperCambUbicFarmId");

                    b.HasOne("DataModel.AUD_InspAperFabricanteTB", "InspAperFabricante")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspAperFabricanteId");

                    b.HasOne("DataModel.AUD_InspAperturaCosmetArtesanalTB", "InspAperturaCosmetArtesanal")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspAperturaCosmetArtesanalId");

                    b.HasOne("DataModel.AUD_InspCierreOperacionTB", "InspCierreOperacion")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspCierreOperacionId");

                    b.HasOne("DataModel.AUD_InspDisposicionFinalTB", "InspDisposicionFinal")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspDisposicionFinalId");

                    b.HasOne("DataModel.AUD_InspGuiBPMFabCosmeticoMedTB", "InspGuiBPMFabCosmeticoMed")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspGuiBPMFabCosmeticoMedId");

                    b.HasOne("DataModel.AUD_InspGuiBPMFabNatMedicinaTB", "InspGuiBPMFabNatMedicina")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspGuiBPMFabNatMedicinaId");

                    b.HasOne("DataModel.AUD_InspGuiaBPMFabricanteMedTB", "InspGuiaBPMFabricanteMed")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspGuiaBPMFabricanteMedId");

                    b.HasOne("DataModel.AUD_InspInvestigacionTB", "InspInvestigacion")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspInvestigacionId");

                    b.HasOne("DataModel.AUD_InspRetiroRetencionTB", "InspRetiroRetencion")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspRetiroRetencionId");

                    b.HasOne("DataModel.AUD_InspRutinaVigAgenciaTB", "InspRutinaVigAgencia")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspRutinaVigAgenciaId");

                    b.HasOne("DataModel.AUD_InspRutinaVigFarmaciaTB", "InspRutinaVigFarmacia")
                        .WithOne("Inspeccion")
                        .HasForeignKey("DataModel.AUD_InspeccionTB", "InspRutinaVigFarmaciaId");

                    b.Navigation("Establecimiento");

                    b.Navigation("InspAperCambUbicAgen");

                    b.Navigation("InspAperCambUbicFarm");

                    b.Navigation("InspAperFabricante");

                    b.Navigation("InspAperturaCosmetArtesanal");

                    b.Navigation("InspCierreOperacion");

                    b.Navigation("InspDisposicionFinal");

                    b.Navigation("InspGuiBPMFabCosmeticoMed");

                    b.Navigation("InspGuiBPMFabNatMedicina");

                    b.Navigation("InspGuiaBPMFabricanteMed");

                    b.Navigation("InspInvestigacion");

                    b.Navigation("InspRetiroRetencion");

                    b.Navigation("InspRutinaVigAgencia");

                    b.Navigation("InspRutinaVigFarmacia");
                });

            modelBuilder.Entity("DataModel.AUD_ProdRetiroRetencionTB", b =>
                {
                    b.HasOne("DataModel.AUD_InspRetiroRetencionTB", "FrmRetiroRetencion")
                        .WithMany("LProductos")
                        .HasForeignKey("FrmRetiroRetencionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrmRetiroRetencion");
                });

            modelBuilder.Entity("DataModel.CorregimientoTB", b =>
                {
                    b.HasOne("DataModel.DistritoTB", "Distrito")
                        .WithMany("LCorregimientos")
                        .HasForeignKey("DistritoId");

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LDistritos")
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DataModel.FMV_AlertaTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LAlertas")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.FMV_OrigenAlertaTB", "OrigenAlerta")
                        .WithMany("LAlertas")
                        .HasForeignKey("OrigenAlertaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("OrigenAlerta");
                });

            modelBuilder.Entity("DataModel.FMV_EsaviNotificacionTB", b =>
                {
                    b.HasOne("DataModel.FMV_EsaviTB", "Esavi")
                        .WithMany("LNotificaciones")
                        .HasForeignKey("EsaviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.IntensidadEsaviTB", "IntensidadEsavi")
                        .WithMany("LEsaviNotificacion")
                        .HasForeignKey("IntensidadEsaviId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LEsaviNotificacion")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.TipoVacunaTB", "TipoVacuna")
                        .WithMany("LEsaviNotificacion")
                        .HasForeignKey("TipoVacunaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Esavi");

                    b.Navigation("IntensidadEsavi");

                    b.Navigation("Laboratorio");

                    b.Navigation("TipoVacuna");
                });

            modelBuilder.Entity("DataModel.FMV_EsaviTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LEsavi")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany("LEsavi")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LEsavi")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.TipoInstitucionTB", "TipoInstitucion")
                        .WithMany("LEsavi")
                        .HasForeignKey("TipoInstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");

                    b.Navigation("Provincia");

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.FMV_FfTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LFf")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany("LFf")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LFf")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.TipoInstitucionTB", "TipoInstitucion")
                        .WithMany("LFf")
                        .HasForeignKey("TipoInstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");

                    b.Navigation("Provincia");

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.FMV_FtTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LFt")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany()
                        .HasForeignKey("InstitucionDestinoId");

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("DataModel.TipoInstitucionTB", "TipoInstitucion")
                        .WithMany()
                        .HasForeignKey("TipoInstitucionId");

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");

                    b.Navigation("Provincia");

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.FMV_IpsTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LIpsEvaluador")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LIps")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.PersonalTrabajadorTB", "Registrador")
                        .WithMany("LIpsRegistrador")
                        .HasForeignKey("RegistradorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.PersonalTrabajadorTB", "Tramitador")
                        .WithMany("LIpsTramitador")
                        .HasForeignKey("TramitadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("Laboratorio");

                    b.Navigation("Registrador");

                    b.Navigation("Tramitador");
                });

            modelBuilder.Entity("DataModel.FMV_NotaTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LNotas")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany("LNotas")
                        .HasForeignKey("InstitucionDestinoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");
                });

            modelBuilder.Entity("DataModel.FMV_PmrProductoTB", b =>
                {
                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LProductos")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.FMV_PmrTB", "Pmr")
                        .WithMany("LProductos")
                        .HasForeignKey("PmrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Pmr");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LPmr")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");
                });

            modelBuilder.Entity("DataModel.FMV_RamNotificacionTB", b =>
                {
                    b.HasOne("DataModel.FMV_RamTB", "Ram")
                        .WithMany()
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("DataModel.FMV_RamTB", b =>
                {
                    b.HasOne("DataModel.PersonalTrabajadorTB", "Evaluador")
                        .WithMany("LRams")
                        .HasForeignKey("EvaluadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.InstitucionDestinoTB", "InstitucionDestino")
                        .WithMany("LRam")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LRam")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.TipoInstitucionTB", "TipoInstitucion")
                        .WithMany("LRam")
                        .HasForeignKey("TipoInstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Evaluador");

                    b.Navigation("InstitucionDestino");

                    b.Navigation("Provincia");

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.FMV_RfvTB", b =>
                {
                    b.HasOne("DataModel.LaboratorioTB", "Laboratorio")
                        .WithMany("LRfv")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("DataModel.InstitucionDestinoTB", b =>
                {
                    b.HasOne("DataModel.ProvinciaTB", "Provincia")
                        .WithMany("LInstitucion")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataModel.TipoInstitucionTB", "TipoInstitucion")
                        .WithMany("LInstituciones")
                        .HasForeignKey("TipoInstitucionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Provincia");

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.HasOne("DataModel.PaisTB", "Pais")
                        .WithMany("LProvincia")
                        .HasForeignKey("PaisId");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.AUD_EstablecimientoTB", b =>
                {
                    b.Navigation("LInspections");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperCambUbicAgenTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperCambUbicFarmTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperFabricanteTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspAperturaCosmetArtesanalTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspCierreOperacionTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspDisposicionFinalTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspeccionTB", b =>
                {
                    b.Navigation("LAttachments");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiaBPMFabricanteMedTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiBPMFabCosmeticoMedTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspGuiBPMFabNatMedicinaTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspInvestigacionTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspRetiroRetencionTB", b =>
                {
                    b.Navigation("Inspeccion");

                    b.Navigation("LProductos");
                });

            modelBuilder.Entity("DataModel.AUD_InspRutinaVigAgenciaTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.AUD_InspRutinaVigFarmaciaTB", b =>
                {
                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("DataModel.DistritoTB", b =>
                {
                    b.Navigation("LCorregimientos");
                });

            modelBuilder.Entity("DataModel.FMV_EsaviTB", b =>
                {
                    b.Navigation("LNotificaciones");
                });

            modelBuilder.Entity("DataModel.FMV_OrigenAlertaTB", b =>
                {
                    b.Navigation("LAlertas");
                });

            modelBuilder.Entity("DataModel.FMV_PmrTB", b =>
                {
                    b.Navigation("LProductos");
                });

            modelBuilder.Entity("DataModel.InstitucionDestinoTB", b =>
                {
                    b.Navigation("LEsavi");

                    b.Navigation("LFf");

                    b.Navigation("LNotas");

                    b.Navigation("LRam");
                });

            modelBuilder.Entity("DataModel.IntensidadEsaviTB", b =>
                {
                    b.Navigation("LEsaviNotificacion");
                });

            modelBuilder.Entity("DataModel.LaboratorioTB", b =>
                {
                    b.Navigation("LEsaviNotificacion");

                    b.Navigation("LIps");

                    b.Navigation("LProductos");

                    b.Navigation("LRfv");
                });

            modelBuilder.Entity("DataModel.PaisTB", b =>
                {
                    b.Navigation("LProvincia");
                });

            modelBuilder.Entity("DataModel.PersonalTrabajadorTB", b =>
                {
                    b.Navigation("LAlertas");

                    b.Navigation("LEsavi");

                    b.Navigation("LFf");

                    b.Navigation("LFt");

                    b.Navigation("LIpsEvaluador");

                    b.Navigation("LIpsRegistrador");

                    b.Navigation("LIpsTramitador");

                    b.Navigation("LNotas");

                    b.Navigation("LPmr");

                    b.Navigation("LRams");
                });

            modelBuilder.Entity("DataModel.ProvinciaTB", b =>
                {
                    b.Navigation("LDistritos");

                    b.Navigation("LEsavi");

                    b.Navigation("LFf");

                    b.Navigation("LInstitucion");

                    b.Navigation("LRam");
                });

            modelBuilder.Entity("DataModel.TipoInstitucionTB", b =>
                {
                    b.Navigation("LEsavi");

                    b.Navigation("LFf");

                    b.Navigation("LInstituciones");

                    b.Navigation("LRam");
                });

            modelBuilder.Entity("DataModel.TipoVacunaTB", b =>
                {
                    b.Navigation("LEsaviNotificacion");
                });

            modelBuilder.Entity("DataModel.UserProfileTB", b =>
                {
                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
