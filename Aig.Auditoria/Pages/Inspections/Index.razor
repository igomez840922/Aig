@page "/inspecciones"
@using DataModel.Helper;
@layout BackendLayout
@attribute [Authorize]

@if (!OpenAddEdit)
{

    <div class="kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor" id="kt_content">

        <div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">

            <div class="row">
                <div class="col-xl-12">
                    <div class="kt-portlet">
                        <div class="kt-portlet__head">
                            <div class="kt-portlet__head-label">
                                <h3 class="kt-portlet__head-title">
                                    @languageContainerService.Keys["Inspections"]
                                </h3>
                            </div>
                            <div class="kt-portlet__head-toolbar">
                                <div class="dropdown dropdown-inline">
                                    <button type="button" class="btn btn-hover-brand btn-elevate-hover btn-icon btn-sm btn-icon-md" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="flaticon-more"></i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right">
                                        <a href="javascript:void(0)" class="dropdown-item" @onclick="() => FetchData()"><i class="fa fa-random"></i>@languageContainerService.Keys["Update"]</a>
                                        <a href="javascript:void(0)" class="dropdown-item" @onclick="() => OnEdit(0)"><i class="fa fa-plus"></i>@languageContainerService.Keys["New"]</a>
                                        <a href="javascript:void(0)" class="dropdown-item" @onclick="() => ExportToExcel()"><i class="fa fa-file-excel"></i>@languageContainerService.Keys["Export"]</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="kt-portlet__body kt-portlet__body--fit">
                            <div class="row">
                                <div class="col-12">
                                    <div class="kt-portlet__body">
                                        <EditForm Model="@dataModel" OnValidSubmit="OnFilter" class="kt-form kt-form--label-right">
                                            <DataAnnotationsValidator />
                                            <div class="form-group row">
                                                <div class="col-sm-6">
                                                    <label>@languageContainerService.Keys["Search"]</label>
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" @bind="dataModel.Filter" name="Filter" />
                                                        <div class="input-group-append">
                                                            <button type="submit" class="btn btn-secondary"><i class="fa fa-search"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-3">
                                                    <label>@languageContainerService.Keys["Provincia"]</label>
                                                    <div class="form-line">
                                                        <RadzenDropDown AllowClear="true" TValue="long?" Class="form-control" @bind-Value=@dataModel.ProvinceId
                                                                        AllowFiltering="true" FilterCaseSensitivity="@Radzen.FilterCaseSensitivity.CaseInsensitive" FilterOperator="@Radzen.StringFilterOperator.Contains"
                                                                        Data=@LProvincias TextProperty="Nombre" ValueProperty="Id"
                                                                        Change=@(args => {OnFilter();}) />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <div class="col-sm-3">
                                                    <label>@languageContainerService.Keys["IspectionType"]</label>
                                                    <div class="form-line">
                                                        <InputSelect @bind-Value="dataModel.TipoActa" class="form-control" @onclick="OnFilter">

                                                            <option value="@enumAUD_TipoActa.None">@languageContainerService.Keys["All"]</option>

                                                            @foreach (enumAUD_TipoActa dt in Enum.GetValues(typeof(enumAUD_TipoActa)))
                                                            {
                                                                if (dt != enumAUD_TipoActa.None)
                                                                {
                                                                    <option value="@dt">@(DataModel.Helper.Helper.GetDescription(dt))</option>
                                                                }
                                                            }
                                                        </InputSelect>
                                                    </div>

                                                </div>
                                                <div class="col-sm-3">
                                                    <label>@languageContainerService.Keys["Status"]</label>
                                                    <div class="form-line">
                                                        <InputSelect @bind-Value="dataModel.StatusInspecciones" class="form-control" @onclick="OnFilter">
                                                            <option value="@enum_StatusInspecciones.None">@languageContainerService.Keys["All"]</option>

                                                            @foreach (enum_StatusInspecciones dt in Enum.GetValues(typeof(enum_StatusInspecciones)))
                                                            {
                                                                if (dt != enum_StatusInspecciones.None)
                                                                {
                                                                    <option value="@dt">@(DataModel.Helper.Helper.GetDescription(dt))</option>
                                                                }
                                                            }
                                                        </InputSelect>
                                                    </div>

                                                </div>
                                                <div class="col-sm-3">
                                                    <label>@languageContainerService.Keys["FromDate"]</label>
                                                    <div class="form-line">
                                                        <RadzenDatePicker TValue="DateTime?" Max="DateTime.Now" @bind-Value="dataModel.FromDate" ShowTime="false" DateFormat="dd/MM/yyyy" Change=@(args => {OnFilter();}) />
                                                    </div>

                                                </div>
                                                <div class="col-sm-3">
                                                    <label>@languageContainerService.Keys["ToDate"]</label>
                                                    <div class="form-line">
                                                        <RadzenDatePicker TValue="DateTime?" Min="dataModel.FromDate" @bind-Value="dataModel.ToDate" ShowTime="false" DateFormat="dd/MM/yyyy" Change=@(args => {OnFilter();}) />
                                                    </div>

                                                </div>
                                            </div>
                                        </EditForm>
                                    </div>

                                    @if (dataModel != null && dataModel.Ldata != null && dataModel.Ldata.Count > 0)
                                    {
                                        <div class="kt-portlet__body">
                                            <!--begin::Section-->
                                            <div class="kt-section">
                                                <div class="table-responsive">
                                                    <table class="table rounded table-striped">
                                                        <thead class=thead-light>
                                                            <tr>
                                                                <th>@languageContainerService.Keys["ActNumber"]</th>
                                                                <th>@languageContainerService.Keys["IspectionType"]</th>
                                                                @*<th>@languageContainerService.Keys["Status"]</th>*@
                                                                <th>@languageContainerService.Keys["DateOfRecord"]</th>
                                                                <th>@languageContainerService.Keys["LicNumber"]</th>
                                                                <th>@languageContainerService.Keys["Recibo de Pago"]</th>
                                                                <th>@languageContainerService.Keys["NoticeOperation"]</th>
                                                                <th>@languageContainerService.Keys["Establishments"]</th>
                                                                <th>@languageContainerService.Keys["Provincia"]</th>
                                                                <th></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var dt in dataModel.Ldata)
                                                            {
                                                                <tr>
                                                                    <td scope="row">@dt.NumActa</td>
                                                                    <td>@(DataModel.Helper.Helper.GetDescription(dt.TipoActa))</td>
                                                                    @*<td>@(DataModel.Helper.Helper.GetDescription(dt.StatusInspecciones))</td>*@
                                                                    <td>@dt.FechaInicio.ToString("dd/MM/yyyy hh:mm tt")</td>
                                                                    <td>@(dt.NumLicencia)</td>
                                                                    <td>@(dt.ReciboPago)</td>
                                                                    <td>@(dt.AvisoOperaciones)</td>
                                                                    <td>@(dt.Nombre)</td>
                                                                    <td>@(LProvincias?.Where(x => x.Id == dt.ProvinciaId)?.FirstOrDefault()?.Nombre??"")</td>
                                                                    <td style="text-align:right">
                                                                        <div class="btn-group">
                                                                            <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@languageContainerService.Keys["Actions"]</button>
                                                                            <div class="dropdown-menu">
                                                                                <a class="dropdown-item" href="javascript:void(0)" @onclick="() => SendEmailNotification(dt.Id)"><i class="fa fa-paper-plane"></i>@languageContainerService.Keys["Email"]</a>
                                                                                <a class="dropdown-item" href="javascript:void(0)" @onclick="() => DownloadPdf(dt.Id)"><i class="fa fa-file-pdf"></i>@languageContainerService.Keys["Download"]</a>
                                                                                <a class="dropdown-item" href="javascript:void(0)" @onclick="() => OnEdit(dt.Id)" data-toggle="modal" data-target="#modal_createedit" data-ktportlet-tool="edit"><i class="fa fa-edit"></i>@languageContainerService.Keys["Edit"]</a>
                                                                                <a class="dropdown-item" href="javascript:void(0)" @onclick="() => OnDelete(dt.Id)"><i class="fa fa-trash"></i>@languageContainerService.Keys["Delete"]</a>
                                                                            </div>
                                                                        </div>
                                                                        <!-- /btn-group -->
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <!--end::Section-->
                                        </div>
                                        <div class="kt-portlet__foot">
                                            <BlazorPager CurrentPage="@(dataModel.PagIdx + 1)"
                                                         PageCount="@dataModel.PagesCount"
                                                         VisiblePages="@(dataModel.PagesCount>3?4:dataModel.PagesCount)"
                                                         ShowFirstLast="true"
                                                         ShowPageNumbers="true"
                                                         FirstText="<<"
                                                         LastText=">>"
                                                         NextText=">"
                                                         PreviousText="<"
                                                         OnPageChanged="(async e => {
						                     if (dataModel.PagesCount < e)
							                    return;
						                    dataModel.PagIdx = e - 1;
						                    await FetchData();})">
                                            </BlazorPager>
                                        </div>

                                    }
                                    <!--end::Form-->


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
else
{
    @*<Aig.Auditoria.Components.Inspections.InspectionBase Inspeccion="dataModel.Data"></Aig.Auditoria.Components.Inspections.InspectionBase>*@
    switch (SelectedData?.TipoActa)
    {
        case DataModel.Helper.enumAUD_TipoActa.RR:
            {
                @*<Aig.Auditoria.Components.Inspections.RetencionRetiroProductos Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.RetencionRetiroProductos>*@
                <Aig.Auditoria.Components.Inspections._6_RetencionRetiro.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._6_RetencionRetiro.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.AF:
        case DataModel.Helper.enumAUD_TipoActa.CUF:
            {
                @*<Aig.Auditoria.Components.Inspections.AperturaCambUbicaFarmacia Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.AperturaCambUbicaFarmacia>*@
                <Aig.Auditoria.Components.Inspections._1_AperturaUbicacionFarmacia.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._1_AperturaUbicacionFarmacia.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.AA:
        case DataModel.Helper.enumAUD_TipoActa.CUA:
            {
                @*<Aig.Auditoria.Components.Inspections.AperturaCambUbicaAgencia Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.AperturaCambUbicaAgencia>*@
                <Aig.Auditoria.Components.Inspections._2_AperturaUbicacionAgencia.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._2_AperturaUbicacionAgencia.Index>

                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.AFM:
         {
                @*<Aig.Auditoria.Components.Inspections.AperturaFabricante Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.AperturaFabricante>*@
                <Aig.Auditoria.Components.Inspections._9_AperturaFabMedicamento.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._9_AperturaFabMedicamento.Index>

                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.AFC:
            {
                @*<Aig.Auditoria.Components.Inspections.AperturaFabricanteCosmetDesinf Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.AperturaFabricanteCosmetDesinf>*@
                <Aig.Auditoria.Components.Inspections._10_AperturaFabCosmetico.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._10_AperturaFabCosmetico.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.VF:
            {
                @*<Aig.Auditoria.Components.Inspections.RutinaVigilanciaFarmacia Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.RutinaVigilanciaFarmacia>*@
                <Aig.Auditoria.Components.Inspections._3_RutinaVigilanciaFarmacia.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._3_RutinaVigilanciaFarmacia.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.VA:
            {
                @*<Aig.Auditoria.Components.Inspections.RutinaVigilanciaAgencia Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.RutinaVigilanciaAgencia>*@
                <Aig.Auditoria.Components.Inspections._4_RutinaVigilanciaAgencia.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._4_RutinaVigilanciaAgencia.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.INV:
            {
               @* <Aig.Auditoria.Components.Inspections.Investigacion Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.Investigacion>*@
                <Aig.Auditoria.Components.Inspections._5_Investigaciones.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._5_Investigaciones.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.BPMCD:
            {
                @*<Aig.Auditoria.Components.Inspections.GuiaBPMFabCosmeticoMed Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.GuiaBPMFabCosmeticoMed>*@
                <Aig.Auditoria.Components.Inspections._13_BpmFabCosmeticosDesinf.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._13_BpmFabCosmeticosDesinf.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.AECA:
            {
                @*<Aig.Auditoria.Components.Inspections.AperturaCosmetArtesanal Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.AperturaCosmetArtesanal>*@
                <Aig.Auditoria.Components.Inspections._16_AperturaFabCosmeticoArtesanal.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._16_AperturaFabCosmeticoArtesanal.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.BPMMN:
            {
                @*<Aig.Auditoria.Components.Inspections.GuiaBPMProductosNatMedicinales Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.GuiaBPMProductosNatMedicinales>*@
                <Aig.Auditoria.Components.Inspections._14_BpmFabNaturalesMed.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._14_BpmFabNaturalesMed.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.COP:
            {
                @*<Aig.Auditoria.Components.Inspections.CierreOperacion Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.CierreOperacion>*@
                <Aig.Auditoria.Components.Inspections._7_CierreOperaciones.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._7_CierreOperaciones.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.DFP:
            {
                @*<Aig.Auditoria.Components.Inspections.DisposicionFinal Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.DisposicionFinal>*@
                <Aig.Auditoria.Components.Inspections._8_DisposicionFinal.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._8_DisposicionFinal.Index>

                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.BPMFM:
            {
                @*<Aig.Auditoria.Components.Inspections.GuiaBPMFabMedicamentos Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.GuiaBPMFabMedicamentos>*@
                <Aig.Auditoria.Components.Inspections._11_BpmFabMedicamentos.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._11_BpmFabMedicamentos.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.BPMAM:
            {
                @*<Aig.Auditoria.Components.Inspections.GuiaBPMLabAcondicionador Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections.GuiaBPMLabAcondicionador>*@
                <Aig.Auditoria.Components.Inspections._12_BpmAcondMedicamentos.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._12_BpmAcondMedicamentos.Index>
                break;
            }
        case DataModel.Helper.enumAUD_TipoActa.BPA:
            {
                <Aig.Auditoria.Components.Inspections._15_BpmBPA.Index Inspeccion="@SelectedData"></Aig.Auditoria.Components.Inspections._15_BpmBPA.Index>
                break;
            }
        default:
            {
                break;
            }
    }
}


@if (DeleteDialog)
{
    <Aig.Auditoria.Components.DeleteConfirmDialog2></Aig.Auditoria.Components.DeleteConfirmDialog2>
}

@if (OpenNew)
{
    <Aig.Auditoria.Components.Inspections.InspectionType></Aig.Auditoria.Components.Inspections.InspectionType>
}
