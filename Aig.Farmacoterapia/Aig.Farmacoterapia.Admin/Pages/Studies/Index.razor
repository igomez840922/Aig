@page "/studies/list"
@*@layout null*@
@using Aig.Farmacoterapia.Admin.Components
@using Aig.Farmacoterapia.Admin.Components.Studies
@using Aig.Farmacoterapia.Application.Medicament.Model
@using Aig.Farmacoterapia.Domain.Common
@using Aig.Farmacoterapia.Domain.Entities.Enums
@using System.Linq
@using Aig.Farmacoterapia.Domain.Entities
@using Aig.Farmacoterapia.Domain.Interfaces
@using System.Globalization
@attribute [Authorize]
@inject IUnitOfWork _unitOfWork;
@inject ISystemLogger _systemLogger;
@inject IStudiesRepository _repository;
@inject IJSRuntime JS

<div class="kt-portlet__head kt-portlet__head--lg">
    <div class="kt-portlet__head-label">
        <span class="kt-portlet__head-icon">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" class="kt-svg-icon">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <rect x="0" y="0" width="24" height="24" />
                    <polygon fill="#000000" opacity="0.3" points="6 3 18 3 20 6.5 4 6.5" />
                    <path d="M6,5 L18,5 C19.1045695,5 20,5.8954305 20,7 L20,19 C20,20.1045695 19.1045695,21 18,21 L6,21 C4.8954305,21 4,20.1045695 4,19 L4,7 C4,5.8954305 4.8954305,5 6,5 Z M9,9 C8.44771525,9 8,9.44771525 8,10 C8,10.5522847 8.44771525,11 9,11 L15,11 C15.5522847,11 16,10.5522847 16,10 C16,9.44771525 15.5522847,9 15,9 L9,9 Z" fill="#000000" />
                </g>
            </svg>
        </span>
        <h3 class="kt-portlet__head-title">
            Estudios
        </h3>
    </div>
    <div class="kt-portlet__head-toolbar">
        <div class="kt-portlet__head-wrapper">
            <div class="kt-portlet__head-actions">
                <button disabled="@(loading)" href="#" class="btn btn-outline-brand btn-square" @onclick="() => OnEdit(0)" data-toggle="modal" data-target="#modal_createedit">
                    <i class="la la-plus"></i>
                    Nuevo
                </button>
            </div>
        </div>
    </div>
</div>

<div class="kt-portlet__body">

     <EditForm Model="this" OnValidSubmit="OnSearch" class="kt-form kt-form--fit kt-margin-b-20">

        <div class="row kt-margin-b-20">
            <div class="col-lg-4 kt-margin-b-10-tablet-and-mobile">
                <label style="color: var(--mud-palette-text-secondary);">Datos del Estudio:</label>
                <input type="text" @bind-value="searchString" class="form-control kt-input" placeholder="Código / Nombre / Investigador / Centro / Comité" data-col-index="0">
            </div>

            <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                <MudDateRangePicker Culture="@CultureInfo.GetCultureInfo("es-Es")" DateFormat="dd/MM/yyyy" Label="Fecha de Evaluación:" Style="border: 1px solid #e2e5ec;padding: 3px 8px 3px 8px;" @bind-DateRange="evaluationDateRange" />
            </div>
           
            
            <div class="col-lg-4 kt-margin-b-10-tablet-and-mobile">
                <div class="row" style="margin-top: 23px;">
                    <div class="col-lg-12" style="margin-top: 2px;">
                        <button  disabled="@(loading)" type="submit" class="btn btn-outline-brand btn-square" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-search"></i>
                                <span>Buscar</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button  disabled="@(loading)" type="button" @onclick="() => OnReset()" class="btn btn-outline-brand btn-square" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-close"></i>
                                <span>Eliminar</span>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row kt-margin-b-20">
        </div>
    </EditForm>

 <div class="table-responsive">
        <MudTable @ref="table" Striped="true"  LoadingProgressColor="Color.Primary" Dense="true" Hover="true" ServerData="@(new Func<TableState, Task<TableData<AigEstudios>>>(DoFetchData))" Breakpoint="Breakpoint.Sm">

            <HeaderContent>
                <MudTh style="width:5px;"></MudTh>
                <MudTh style="width:5%;"><MudTableSortLabel SortLabel="code" T="AigEstudios">Código</MudTableSortLabel></MudTh>
                <MudTh style="width:200px;"><MudTableSortLabel InitialDirection="SortDirection.Ascending"  T="AigEstudios" SortLabel="name">Nombre</MudTableSortLabel></MudTh>
                <MudTh style="width:20px;">Duración</MudTh>
                <MudTh style="width:20px;">Pacientes</MudTh>
                <MudTh style="width:160px;">Investigador</MudTh>
                <MudTh style="width:160px;">Centro</MudTh>
                <MudTh style="width:160px;">Comité de Bioética</MudTh>
                <MudTh style="width:20px;"><MudTableSortLabel T="AigEstudios" SortLabel="eval">Evaluación</MudTableSortLabel></MudTh>
                <MudTh style="width:5px;"></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>
                    <MudIconButton Icon="@(!context.ShowDetails?Icons.Filled.ArrowRight:@Icons.Filled.ArrowDropDown)" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.Id))" />
                </MudTd>
                <MudTd DataLabel="Código">@context.Codigo</MudTd>
                <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
                <MudTd DataLabel="Duración">@context.Duracion</MudTd>
                <MudTd DataLabel="Pacientes">@context.Pacientes</MudTd>
                <MudTd DataLabel="Investigador">@context.InvestigadorPrincipal</MudTd>
                <MudTd DataLabel="Centro">@context.CentroInvestigacion</MudTd>
                 <MudTd DataLabel="Comité de Bioética">@context.ComiteBioetica</MudTd>
                <MudTd DataLabel="Evaluación">@(string.Format("{0:dd/MM/yyyy}",context.FechaEvaluacion))</MudTd>
                <MudTd>
                    <span class="dropdown">
                        <button disabled="@(loading)" href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" data-toggle="dropdown" aria-expanded="true">
                            <i class="flaticon-more-1 kt-font-brand"></i>
                        </button>
                        <span class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#" @onclick="() => OnEdit(context.Id)" data-toggle="modal" data-target="#modal_createedit">
                                <i class="la la-edit"></i> Editar
                            </a>
                            <a class="dropdown-item" href="#" @onclick="() => OnDelete(context)" data-toggle="modal">
                                <i class="la la-trash"></i>
                                Eliminar
                            </a>
                            <div class="dropdown-divider ng-star-inserted"></div>
                            @if (!string.IsNullOrEmpty(context.FormDataURL))
                            {
                                <a target="_blank" class="dropdown-item" href="@context.FormDataURL">
                                    <i class="fa fa-file-pdf" style="font-size: 14px;"></i>
                                     Formulario de solicitud
                                </a>
                            }
                        </span>
                    </span>
                </MudTd>
            </RowTemplate>
             <ChildRowContent>
                @if (context.ShowDetails)
                {
                    <MudTr>
                        <td colspan="10">

                            <div style="background-color: #f2eefc;" _ngcontent-lil-c210="" class="py-4 d-flex ng-star-inserted">


                                <div _ngcontent-lil-c210="" class="mx-4" style="padding: 5px;">

                                    <div _ngcontent-lil-c210="" class="row">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Notas de Evaluación
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50" style="margin-top: 3px;">
                                            <p align="justify">
                                                @(!string.IsNullOrEmpty(@context.NotaEvaluacion) ? @context.NotaEvaluacion : "<Ninguna>")
                                            </p>
                                        </span>
                                    </div>

                                </div>


                                <div _ngcontent-lil-c210="" class="mx-4" style="padding: 5px;">

                                    <div _ngcontent-lil-c210="" class="row">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Aspectos Sobresalientes:
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50" style="margin-top: 3px;">
                                            <p align="justify">
                                                @(!string.IsNullOrEmpty(@context.AspectosSobresalientes) ? @context.AspectosSobresalientes : "<Ninguno>")
                                            </p>
                                        </span>
                                    </div>
                                </div>

                                <div _ngcontent-lil-c210="" class="mx-4" style="min-width: 210px !important;padding: 5px;">

                                    <div _ngcontent-lil-c210="" class="d-flex mb-2">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Creado:
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50">
                                            @context.Created
                                        </span>
                                    </div>
                                    <div _ngcontent-lil-c210="" class="d-flex mb-2">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Creado por:
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50">
                                            @(!string.IsNullOrEmpty(@context.CreatedBy) ? @context.CreatedBy : "<Ninguno>")
                                        </span>
                                    </div>

                                </div>

                                <div _ngcontent-lil-c210="" class="mx-4" style="min-width: 210px !important;padding: 5px;">


                                    <div _ngcontent-lil-c210="" class="d-flex mb-2">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Modificado por:
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50">
                                            @(@context.LastModifiedBy != null ? @context.LastModifiedBy : "<Ninguno>")
                                        </span>
                                    </div>

                                    <div _ngcontent-lil-c210="" class="d-flex mb-2">
                                        <span _ngcontent-lil-c210="" class="font-weight-bold font-size-sm" style="margin-right: 5px;">
                                            Modificado:
                                        </span>
                                        <span _ngcontent-lil-c210="" class="text-dark-50">
                                            @(@context.LastModified != null ? @context.LastModified : "<Ninguna>")
                                        </span>
                                    </div>

                                </div>

                            </div>

                        </td>
                    </MudTr>

                        <MudTr>
                            <td colspan="11">
  
                                <Products Parent="@context.Id" List="@context.Medicamentos" ></Products>
                            </td>
                        </MudTr>
                 
              }
        </ChildRowContent>
            <NoRecordsContent>
                <MudText>No se encontraron elementos</MudText>
            </NoRecordsContent>
           
        </MudTable>
    </div>

</div>

@if (addEditDialogIsOpen)
{
     <AddEdit ModelData="@modelData" OnClose="@OnEventAddEditClose"></AddEdit>
}

@if (deleteDialogIsOpen)
{
           <DeleteConfirmDialog Caption="Eliminar"
                   Message="¿Confirma que desea de eliminar el artículo?"
                   OnClose="@OnDeleteDialogClose">
            </DeleteConfirmDialog>
}

@code {

    private MudTable<AigEstudios> table;
    private static IEnumerable<AigEstudios> List { get; set; }
    private string searchString;
    private DateRange evaluationDateRange;
    protected AigEstudios modelData;
    protected bool addEditDialogIsOpen = false;
    protected bool deleteDialogIsOpen = false;
    protected bool loading = false;
    protected async override Task OnInitializedAsync()
    {
        try
        {
            searchString = string.Empty;
            evaluationDateRange = new DateRange();
        }
        catch (Exception ex)
        {
            _systemLogger.Error(ex.Message);
        }

        base.OnInitialized();
    }
     private void ShowBtnPress(long nr)
    {
        AigEstudios tmpPerson = List.First(f => f.Id == nr);
        tmpPerson.ShowDetails = !tmpPerson.ShowDetails;
    }
    private async Task RefresView()
    {
        await this.InvokeAsync(StateHasChanged);
        await Bus.Publish<bool>(loading);
    }
    private async Task<TableData<AigEstudios>> DoFetchData(TableState state)
    {
        var result = new TableData<AigEstudios>();
        try
        {

            loading = true;
            await RefresView();
            var sorting = new List<SortingOption>();
            var filters = new List<FilteringOption>();
            if (state.SortDirection != SortDirection.None)
            {
                var sortDirection = state.SortDirection == SortDirection.Descending ? SortingDirection.DESC : SortingDirection.ASC;
                sorting = new() { new SortingOption { Field = state.SortLabel, Direction = sortDirection } };
            }
            if (!string.IsNullOrEmpty(searchString))
                filters.Add(new FilteringOption { Field = "term", Operator = FilteringOperator.Contains, Value = searchString.Trim() });
            if (evaluationDateRange.Start != null && evaluationDateRange.End != null )
            {
                filters.Add(new FilteringOption { Field = "startEvaluationDate", Operator = FilteringOperator.GreaterThanEqual, Value = evaluationDateRange.Start.Value.ToString() });
                filters.Add(new FilteringOption { Field = "endEvaluationDate", Operator = FilteringOperator.LessThanEqual, Value = evaluationDateRange.End.Value.ToString() });
            }
            var args = new PageSearchArgs()
                {
                    PageIndex = state.Page + 1,
                    PageSize = state.PageSize,
                    SortingOptions = sorting,
                    FilteringOptions = filters
                };
            var paginatedResult = await _repository.ListAsync(args);
            List = paginatedResult.Data;
            return new TableData<AigEstudios>() { TotalItems = paginatedResult.TotalCount, Items = paginatedResult.Data };

        }
        catch (Exception ex)
        {
            _systemLogger.Error(ex.Message);
        }
        finally { loading = false; await RefresView(); }
        return result;

    }
 
    private void OnSearch()
    {
        table.ReloadServerData();
    }
    private void OnReset()
    {
        searchString = string.Empty;
        evaluationDateRange = new DateRange();
        table.ReloadServerData();
    }

    private async Task OnEdit(long id)
    {
        var result = await _unitOfWork.Repository<AigEstudios>().GetByIdAsync(id);
        if (result == null)
            result = new AigEstudios();

        modelData = result;
        addEditDialogIsOpen = true;
        StateHasChanged();
    }

    private async Task OnEventAddEditClose(long id)
    {
        addEditDialogIsOpen = false;
        if (id > 0)
            table.ReloadServerData();
    }
    private async Task OnDelete(AigEstudios data)
    {
        modelData = data;
        deleteDialogIsOpen = true;
    }
    private async Task OnDeleteDialogClose(bool isOk)
    {
        if (isOk)
        {
            await _unitOfWork.Repository<AigEstudios>().DeleteAsync(modelData);
            if (_unitOfWork.Commit())
            {
                await JS.InvokeVoidAsync("ShowMessage", "Elemento eliminado correctamente");
                await JS.InvokeVoidAsync("OpenCloseModal", "#btnCloseDeleteModal");
                await table.ReloadServerData();
            }
            else
                await JS.InvokeVoidAsync("ShowError", "DataDeleteError");
        }
        deleteDialogIsOpen = false;
    }

}