@page "/routes/list"
@*@layout null*@
@using Aig.Farmacoterapia.Admin.Components.Product
@using Aig.Farmacoterapia.Admin.Models
@using Aig.Farmacoterapia.Application.Medicament.Model
@using Aig.Farmacoterapia.Domain.Common
@using Aig.Farmacoterapia.Domain.Entities.Enums
@using System.Linq
@using Aig.Farmacoterapia.Domain.Entities
@using Aig.Farmacoterapia.Domain.Interfaces
@using System.Globalization
@attribute [Authorize]
@inject IUnitOfWork _unitOfWork;
@inject ISystemLogger _systemLogger;
@inject IPharmaceuticalRepository _repository;
@inject IJSRuntime JS

<div class="kt-portlet__head kt-portlet__head--lg">
    <div class="kt-portlet__head-label">
        <span class="kt-portlet__head-icon">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" class="kt-svg-icon">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <rect x="0" y="0" width="24" height="24"></rect>
                    <rect fill="#000000" x="4" y="4" width="7" height="7" rx="1.5"></rect>
                    <path d="M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z" fill="#000000" opacity="0.3"></path>
                </g>
            </svg>
        </span>
        <h3 class="kt-portlet__head-title">
            Formas Farmacéuticas
        </h3>
    </div>
    <div class="kt-portlet__head-toolbar">
        <div class="kt-portlet__head-wrapper">
            <div class="kt-portlet__head-actions">
                <div class="dropdown dropdown-inline">
                    <button type="button"
                            class="btn btn-default btn-icon-sm dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="la la-download"></i> Exportar
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        <ul class="kt-nav">
                            <li class="kt-nav__section kt-nav__section--first">
                                <span class="kt-nav__section-text">Seleccionar</span>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-print"></i>
                                    <span class="kt-nav__link-text">Imprimir</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-excel-o"></i>
                                    <span class="kt-nav__link-text">Excel</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-text-o"></i>
                                    <span class="kt-nav__link-text">CSV</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-pdf-o"></i>
                                    <span class="kt-nav__link-text">PDF</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                &nbsp;
                <a href="#" class="btn btn-brand btn-elevate btn-icon-sm" @onclick="() => OnEdit(0)" data-toggle="modal" data-target="#modal_createedit">
                    <i class="la la-plus"></i>
                    Nuevo
                </a>
            </div>
        </div>
    </div>
</div>

<div class="kt-portlet__body">



    <EditForm Model="@modelFilter" OnValidSubmit="OnSearch" class="kt-form kt-form--fit kt-margin-b-20">

        <div class="row kt-margin-b-20">
            <div class="col-lg-4 kt-margin-b-10-tablet-and-mobile">
                <label>Nombre:</label>
                <input type="text" @bind-value="modelFilter.Term" class="form-control kt-input" placeholder="" data-col-index="0">
            </div>
          
            <div class="col-lg-5 kt-margin-b-10-tablet-and-mobile">
                <div class="row" style="margin-top: 23px;">
                    <div class="col-lg-12">
                        <button type="submit" class="btn btn-primary btn-brand--icon" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-search"></i>
                                <span>Buscar</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button @onclick="() => OnReset()" class="btn btn-secondary btn-secondary--icon" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-close"></i>
                                <span>Eliminar</span>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>

    <div class="table-responsive">
        <MudTable @ref="table" Striped="true" SortLabel="name" LoadingProgressColor="Color.Primary" Dense="true" Hover="true" ServerData="@(new Func<TableState, Task<TableData<AigFormaFarmaceutica>>>(DoFetchData))" Breakpoint="Breakpoint.Sm">

            <HeaderContent>
                <MudTh style="width:100px;"><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortLabel="name"  T="AigMedicamento">Forma Farmaceutica</MudTableSortLabel></MudTh>
                <MudTh style="width:10px;"><MudTableSortLabel Enabled="true"T="AigMedicamento">Estado</MudTableSortLabel></MudTh>
                <MudTh style="width:5px;"></MudTh>
            </HeaderContent>
            <RowTemplate>
               
                <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
                <MudTd DataLabel="Estado">@context.Estado</MudTd>
     
                <MudTd>
                    <span class="dropdown">
                        <a href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" data-toggle="dropdown" aria-expanded="true">
                            <i class="la la-ellipsis-h"></i>
                        </a>
                        <span class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#">
                                <i class="la la-edit"></i> Edit Details
                            </a> <a class="dropdown-item" href="#">
                                <i class="la la-leaf"></i> Update Status
                            </a> <a class="dropdown-item" href="#">
                                <i class="la la-print"></i> Generate Report
                            </a>
                        </span>
                    </span>
                </MudTd>
            </RowTemplate>
           
            <NoRecordsContent>
                <MudText>No se encontraron elementos</MudText>
            </NoRecordsContent>
             <LoadingContent>
            <MudText>Cargando...</MudText>
        </LoadingContent>
            <PagerContent>
                <MudTablePager Class="primary" InfoFormat="{first_item}-{last_item} de {all_items}" PageSizeOptions="new int[] {10, 25, 50, 100, 250 }" RowsPerPageString="Filas" />
            </PagerContent>
        </MudTable>
    </div>

</div>

@if (addEditDialogIsOpen)
{
    <ProductAddEdit ModelData="@modelData" OnClose="@OnEventAddEditClose"></ProductAddEdit>
}

@code {

    private MudTable<AigFormaFarmaceutica> table;
    private DateRange dateRange;
    private static IEnumerable<AigFormaFarmaceutica> List { get; set; }
    private string searchString = null;
    protected MedicamentFilter modelFilter;
    protected ProductObject modelData;
    protected bool addEditDialogIsOpen = false;
    
    protected async override Task OnInitializedAsync()
    {
        try
        {
            modelFilter = new MedicamentFilter();
        }
        catch (Exception ex)
        {
            _systemLogger.Error(ex.Message);
        }

        base.OnInitialized();
    }
    private async Task<TableData<AigFormaFarmaceutica>> DoFetchData(TableState state)
    {
        var sorting = new List<SortingOption>();
        var filters = new List<FilteringOption>();
        if (state.SortDirection != SortDirection.None)
        {
            var sortDirection = state.SortDirection == SortDirection.Descending ? SortingDirection.DESC : SortingDirection.ASC;
            sorting = new() { new SortingOption { Field = state.SortLabel, Direction = sortDirection } };
        }
        if (!string.IsNullOrEmpty(modelFilter.Term))
            filters.Add(new FilteringOption { Field = "term", Operator = FilteringOperator.Contains, Value = modelFilter.Term });
        
        var args = new PageSearchArgs(){
            PageIndex = state.Page + 1,
            PageSize = state.PageSize,
            SortingOptions = sorting,
            FilteringOptions = filters
        };
        var paginatedResult = await _repository.ListAsync(args);
        List = paginatedResult.Data;
        return new TableData<AigFormaFarmaceutica>() { TotalItems = paginatedResult.TotalCount, Items = paginatedResult.Data };
    }
    private void OnSearch(string text)
    {
        table.ReloadServerData();
    }
    private void OnSearch()
    {
        table.ReloadServerData();
    }
    private void OnReset()
    {
        modelFilter = new MedicamentFilter();
        dateRange = new DateRange();
        table.ReloadServerData();
    }

    private async Task OnEdit(long id)
    {
        //var result = await MainService.Get(id);
        //if (result == null)
        //{
        //    result = new CurrencyFiatTB();
        //}

        modelData = new ProductObject();
        addEditDialogIsOpen = true;
        StateHasChanged();
    }

    private async Task OnEventAddEditClose(long id)
    {
        addEditDialogIsOpen = false;
    }

}