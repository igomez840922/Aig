@page "/users/list"
@*@layout null*@
@using Aig.Farmacoterapia.Admin.Components
@using Aig.Farmacoterapia.Admin.Components.User
@using Aig.Farmacoterapia.Admin.Models
@using Aig.Farmacoterapia.Application.Medicament.Model
@using Aig.Farmacoterapia.Domain.Common
@using Aig.Farmacoterapia.Domain.Entities.Enums
@using System.Linq
@using Aig.Farmacoterapia.Domain.Entities
@using Aig.Farmacoterapia.Domain.Interfaces
@using System.Globalization
@using Aig.Farmacoterapia.Infrastructure.Identity
@using Aig.Farmacoterapia.Infrastructure.Interfaces
@attribute [Authorize]
@inject IUnitOfWork _unitOfWork;
@inject ISystemLogger _systemLogger;
@inject IContryRepository _repository;
@inject IUserService _userService;
@inject IJSRuntime JsRuntime
@using BlazorPagination

<div class="kt-portlet__head kt-portlet__head--lg">
       
    <div class="kt-portlet__head-label">
        <span class="kt-portlet__head-icon">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" class="kt-svg-icon">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <polygon points="0 0 24 0 24 24 0 24" />
                    <path d="M18,14 C16.3431458,14 15,12.6568542 15,11 C15,9.34314575 16.3431458,8 18,8 C19.6568542,8 21,9.34314575 21,11 C21,12.6568542 19.6568542,14 18,14 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                    <path d="M17.6011961,15.0006174 C21.0077043,15.0378534 23.7891749,16.7601418 23.9984937,20.4 C24.0069246,20.5466056 23.9984937,21 23.4559499,21 L19.6,21 C19.6,18.7490654 18.8562935,16.6718327 17.6011961,15.0006174 Z M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
                </g>
            </svg>
        </span>
        <h3 class="kt-portlet__head-title">
            Usuarios
        </h3>
         
    </div>
    <div class="kt-portlet__head-toolbar">
        <div class="kt-portlet__head-wrapper">
            <div class="kt-portlet__head-actions">
                <a href="#" class="btn btn-outline-brand btn-square" @onclick="() => OnAdd()" data-toggle="modal" data-target="#modal_createedit">
                    <i class="la la-plus"></i>
                    Nuevo
                </a>
            </div>
        </div>
    </div>
</div>

<div class="kt-portlet__body">
     
        
    <EditForm Model="this" OnValidSubmit="OnSearch" class="kt-form kt-form--fit kt-margin-b-20">

        <div class="row kt-margin-b-20">
            <div class="col-lg-4 kt-margin-b-10-tablet-and-mobile">
                <label>Nombre:</label>
                <input type="text" @bind-value="searchString" class="form-control kt-input" placeholder="" data-col-index="0">
            </div>

            <div class="col-lg-5 kt-margin-b-10-tablet-and-mobile">
                <div class="row" style="margin-top: 23px;">
                    <div class="col-lg-12" style="margin-top: 3px;">
                        <button type="submit" class="btn btn-outline-brand btn-square" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-search"></i>
                                <span>Buscar</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button type="button" @onclick="() => OnReset()" class="btn btn-outline-brand btn-square" style="padding: 5px 10px 5px 10px;">
                            <span>
                                <i class="la la-close"></i>
                                <span>Eliminar</span>
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>

    @if (paginatedResult != null && paginatedResult.Data.Count > 0)
    {   
         <div style="padding: 0px !important;" class="kt-container kt-container--fluid  kt-grid__item kt-grid__item--fluid">
           
             
             <div class="row">
             
                @foreach (var dt in paginatedResult.Data)
                {
                    <div class="col-6 col-md-4">

                        <div style="background-color: #f1f2f7;" class="kt-portlet kt-portlet--height-fluid">
                            <div class="kt-portlet__head kt-portlet__head--noborder">
                                <div class="kt-portlet__head-label">
                                    <h3 class="kt-portlet__head-title">
                                    </h3>
                                </div>

                                <div class="kt-portlet__head-toolbar">

                                    <span class="dropdown">
                                        <a href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" data-toggle="dropdown" aria-expanded="true">
                                            <i class="flaticon-more-1 kt-font-brand"></i>
                                        </a>
                                        <span class="dropdown-menu dropdown-menu-right">
                                            <a class="dropdown-item" href="javascript:void(0)" @onclick="() => OnEdit(dt.Id)">
                                                <i class="la la-edit"></i> 
                                                Editar
                                            </a>
                                             <a class="dropdown-item" href="javascript:void(0)" @onclick="() =>OnChangePassword(dt)">
                                                <i class="la la-key"></i> 
                                                Contraseña
                                            </a>
                                            <a class="dropdown-item" href="javascript:void(0)" @onclick="() => OnDelete(dt)">
                                                <i class="la la-trash"></i>
                                                Eliminar
                                            </a>
                                            <div class="dropdown-divider ng-star-inserted"></div>
                                        </span>
                                    </span>
                                 
                                </div>

                            </div>
                            <div class="kt-portlet__body">

                                <div class="kt-widget kt-widget--user-profile-2">
                                    <div class="kt-widget__head">
                                       
                                        <div class="kt-avatar kt-avatar--outline">
                                            @if (string.IsNullOrEmpty(@dt.ProfilePicture)){
                                                <div class="kt-avatar__holder" style="background-image: url(assets/media/users/default.jpg)"></div>
                                            }
                                            else{
                                                <img class="kt-avatar__holder" src="@dt.ProfilePicture"/>
                                            }
                                        </div>
                                       
                                        <div class="kt-widget__info">
                                            <a href="javascript:void(0)" class="kt-widget__username">
                                                @(dt.FullName)
                                            </a>
                                            <span class="kt-widget__desc">

                                            </span>
                                        </div>
                                    </div>
                                    <div class="kt-widget__body">
                                        <div class="kt-widget__section">
                                            &emsp;
                                        </div>
                                        <div class="kt-widget__item">
                                            <div class="kt-widget__contact">
                                                <span class="kt-widget__label">Correo:</span>
                                                <a href="#" class="kt-widget__data">@dt.Email</a>
                                            </div>
                                            <div class="kt-widget__contact">
                                                <span class="kt-widget__label">Teléfono:</span>
                                                <a href="#" class="kt-widget__data">@(dt.PhoneNumber)</a>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="kt-widget__footer">
                                        @*<button type="button" class="btn btn-label-brand btn-lg btn-upper" @onclick="() => OnShowEvents(dt)">Eventos (@(dt.Exhibitor?.LEvents?.Count()??0))</button>*@
                                    </div>
                                </div>


                            </div>
                        </div>

                    </div>
                }

            </div>
             <MudPagination Selected="@paginatedResult.CurrentPage" SelectedChanged="PageChanged" Variant="Variant.Outlined" Count="@paginatedResult.TotalPages" Class="pa-4"/>
        </div>
    }

</div>

@if (addDialogIsOpen)
{
    <Add ModelData="@modelData" OnClose="@OnEventAddEditClose"></Add>
}
@if (editDialogIsOpen)
{
    <Edit ModelData="@modelData" OnClose="@OnEventAddEditClose"></Edit>
}
@if (editPasswordDialogIsOpen)
{
    <EditPassword ModelData="@modelData" OnClose="@OnEventChangePasswordClose"></EditPassword>
}
@if (deleteDialogIsOpen)
{
    <DeleteConfirmDialog Caption="Eliminar"
                     Message="¿Confirma que desea de eliminar el artículo?"
                     OnClose="@OnDeleteDialogClose">
    </DeleteConfirmDialog>
}
@code {

    private PaginatedResult<ApplicationUser> paginatedResult;
    private MudTable<ApplicationUser> table;
    private static IEnumerable<ApplicationUser> List { get; set; }
    private string searchString;
    protected ApplicationUser modelData;
    protected bool addDialogIsOpen = false;
    protected bool editDialogIsOpen = false;
    protected bool editPasswordDialogIsOpen = false;
    protected bool deleteDialogIsOpen = false;
    protected bool loading { get; set; } = true;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            searchString = string.Empty;
            paginatedResult = new PaginatedResult<ApplicationUser>();
            await DoFetchData();
        }
        catch (Exception ex)
        {
            _systemLogger.Error(ex.Message);
        }

        base.OnInitialized();
    }

    private async Task DoFetchData()
    {
        loading = true;
        var sorting =new List<SortingOption>(){ new SortingOption { Field = "Name", Direction = SortingDirection.ASC } };
        var filters = new List<FilteringOption>();
        if (!string.IsNullOrEmpty(searchString))
            filters.Add(new FilteringOption { Field = "term", Operator = FilteringOperator.Contains, Value = searchString });
        var args = new PageSearchArgs() {
                PageIndex = paginatedResult.CurrentPage,
                PageSize = paginatedResult.PageSize,
                SortingOptions = sorting,
                FilteringOptions = filters
            };
        paginatedResult = await _userService.ListAsync(args);
        loading = false;
        StateHasChanged();
    }

  
    private async void OnSearch()
    {
        await DoFetchData();
    }

    private  async Task PageChanged(int i)
    {
        paginatedResult.CurrentPage = i;
        await DoFetchData();
    }

    private async void OnReset()
    {
        searchString = string.Empty;
        await DoFetchData();
    }
    private async Task OnAdd()
    {
        modelData = new ApplicationUser();;
        addDialogIsOpen = true;
        StateHasChanged();
    }
    private async Task OnEdit(string id)
    {
        modelData = await _userService.GetAsync(id);
        editDialogIsOpen = true;
        StateHasChanged();
    }
    private void OnChangePassword(ApplicationUser user)
    {
        if (user != null){
            modelData = user;
            editPasswordDialogIsOpen = true;
        }
    }
    private async Task OnEventAddEditClose(string id)
    {
        if (!string.IsNullOrEmpty(id))
            await DoFetchData();
        addDialogIsOpen=editDialogIsOpen = false;

    }
    private async Task OnDelete(ApplicationUser user)
    {
        modelData= user;
        deleteDialogIsOpen = true;
    }

    private async Task OnDeleteDialogClose(bool isOk)
    {        
        if (isOk)
        {
            var result = await _userService.DeleteDeleteAsync(modelData.Id);
            if (!result.Succeeded)
                await JsRuntime.InvokeVoidAsync("ShowError", result.Messages.First());
            else {
                await DoFetchData();
                await JsRuntime.InvokeVoidAsync("ShowMessage", result.Messages.First());
            }

        }
        deleteDialogIsOpen = false;
    }

    private async Task  OnEventChangePasswordClose(string id)
    {
        if (!string.IsNullOrEmpty(id))
            await DoFetchData();
       editPasswordDialogIsOpen = false;
    }
}