@page "/products/list1"
@*@layout null*@
@using Aig.Farmacoterapia.Admin.Components.Product
@using Aig.Farmacoterapia.Admin.Models
@using Aig.Farmacoterapia.Application.Medicament.Model
@using Aig.Farmacoterapia.Domain.Common
@using Aig.Farmacoterapia.Domain.Entities.Enums
@using BlazorPagination
@using System.Linq
@using Aig.Farmacoterapia.Domain.Entities
@using Aig.Farmacoterapia.Domain.Interfaces
@using System.Globalization
@attribute [Authorize]
@inject IUnitOfWork _unitOfWork;
@inject ISystemLogger _systemLogger;
@inject IMedicamentRepository _repository;
@inject IJSRuntime JS


<div class="kt-portlet__head kt-portlet__head--lg">
    <div class="kt-portlet__head-label">
        <span class="kt-portlet__head-icon">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" class="kt-svg-icon">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                    <rect x="0" y="0" width="24" height="24"></rect>
                    <rect fill="#000000" x="4" y="4" width="7" height="7" rx="1.5"></rect>
                    <path d="M5.5,13 L9.5,13 C10.3284271,13 11,13.6715729 11,14.5 L11,18.5 C11,19.3284271 10.3284271,20 9.5,20 L5.5,20 C4.67157288,20 4,19.3284271 4,18.5 L4,14.5 C4,13.6715729 4.67157288,13 5.5,13 Z M14.5,4 L18.5,4 C19.3284271,4 20,4.67157288 20,5.5 L20,9.5 C20,10.3284271 19.3284271,11 18.5,11 L14.5,11 C13.6715729,11 13,10.3284271 13,9.5 L13,5.5 C13,4.67157288 13.6715729,4 14.5,4 Z M14.5,13 L18.5,13 C19.3284271,13 20,13.6715729 20,14.5 L20,18.5 C20,19.3284271 19.3284271,20 18.5,20 L14.5,20 C13.6715729,20 13,19.3284271 13,18.5 L13,14.5 C13,13.6715729 13.6715729,13 14.5,13 Z" fill="#000000" opacity="0.3"></path>
                </g>
            </svg>
        </span>
        <h3 class="kt-portlet__head-title">
            Medicamentos
        </h3>
    </div>
    <div class="kt-portlet__head-toolbar">
        <div class="kt-portlet__head-wrapper">
            <div class="kt-portlet__head-actions">
                <div class="dropdown dropdown-inline">
                    <button type="button"
                            class="btn btn-default btn-icon-sm dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="la la-download"></i> Exportar
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        <ul class="kt-nav">
                            <li class="kt-nav__section kt-nav__section--first">
                                <span class="kt-nav__section-text">Seleccionar</span>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-print"></i>
                                    <span class="kt-nav__link-text">Imprimir</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-excel-o"></i>
                                    <span class="kt-nav__link-text">Excel</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-text-o"></i>
                                    <span class="kt-nav__link-text">CSV</span>
                                </a>
                            </li>
                            <li class="kt-nav__item">
                                <a href="#" class="kt-nav__link">
                                    <i class="kt-nav__link-icon la la-file-pdf-o"></i>
                                    <span class="kt-nav__link-text">PDF</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                &nbsp;
                <a href="#" class="btn btn-brand btn-elevate btn-icon-sm" @onclick="() => OnEdit(0)" data-toggle="modal" data-target="#modal_createedit">
                    <i class="la la-plus"></i>
                    Nuevo
                </a>
            </div>
        </div>
    </div>
</div>
<div class="kt-portlet__body">

    @* <form class="kt-form kt-form--fit kt-margin-b-20">
        <div class="row kt-margin-b-20">
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>RecordID:</label>
        <input type="text" class="form-control kt-input" placeholder="E.g: 4590" data-col-index="0">
        </div>
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>OrderID:</label>
        <input type="text" class="form-control kt-input" placeholder="E.g: 37000-300" data-col-index="1">
        </div>
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>Country:</label>
        <select class="form-control kt-input" data-col-index="2">
        <option value="">Select</option>
        </select>
        </div>
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>Agent:</label>
        <input type="text" class="form-control kt-input" placeholder="Agent ID or name" data-col-index="4">
        </div>
        </div>
        <div class="row kt-margin-b-20">
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>Ship Date:</label>
        <div class="input-daterange input-group" id="kt_datepicker">
        <input type="text" class="form-control kt-input" name="start" placeholder="From" data-col-index="5">
        <div class="input-group-append">
        <span class="input-group-text"><i class="la la-ellipsis-h"></i></span>
        </div>
        <input type="text" class="form-control kt-input" name="end" placeholder="To" data-col-index="5">
        </div>
        </div>
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>Status:</label>
        <select class="form-control kt-input" data-col-index="6">
        <option value="">Select</option>
        </select>
        </div>
        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
        <label>Type:</label>
        <select class="form-control kt-input" data-col-index="7">
        <option value="">Select</option>
        </select>
        </div>
        </div>
        <div class="kt-separator kt-separator--md kt-separator--dashed"></div>
        <div class="row">
        <div class="col-lg-12">
        <button class="btn btn-primary btn-brand--icon" id="kt_search">
        <span>
        <i class="la la-search"></i>
        <span>Search</span>
        </span>
        </button>
        &nbsp;&nbsp;
        <button class="btn btn-secondary btn-secondary--icon" id="kt_reset">
        <span>
        <i class="la la-close"></i>
        <span>Reset</span>
        </span>
        </button>
        </div>
        </div>
        </form>*@

    <EditForm Model="@modelFilter" OnValidSubmit="OnFilter" class="kt-form kt-form--fit kt-margin-b-20">

        <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
            <label>Fecha de Emisión:</label>
            <div class="input-daterange input-group" id="kt_datepicker">
                <input id="dateFrom" type="text" class="form-control kt-input" name="start" placeholder="From" data-col-index="5">
                <div class="input-group-append">
                    <span class="input-group-text"><i class="la la-ellipsis-h"></i></span>
                </div>
                <input type="text" class="form-control kt-input" name="end" placeholder="To" data-col-index="5">
            </div>
        </div>

        <div class="kt-separator kt-separator--md kt-separator--dashed"></div>

        <div class="row">
            <div class="col-lg-12">
                <button type="submit" class="btn btn-primary btn-brand--icon">
                    <span>
                        <i class="la la-search"></i>
                        <span>Search</span>
                    </span>
                </button>
                &nbsp;&nbsp;
                <button class="btn btn-secondary btn-secondary--icon" id="kt_reset">
                    <span>
                        <i class="la la-close"></i>
                        <span>Reset</span>
                    </span>
                </button>
            </div>
        </div>

        @*     <div class="kt-portlet__body">
            <div class="form-group row">
            <div class="col-lg-4">
            <label>@LanguageContainer.Keys["Search"]</label>
            <div class="input-group">
            <input type="text" class="form-control" @bind="ModelData.Filter" name="Filter" />
            <div class="input-group-append">
            <button type="submit" class="btn btn-secondary"><i class="fa fa-search"></i></button>
            </div>
            </div>
            </div>
            </div>
            </div>*@

    </EditForm>


    @if (paginatedResult != null && paginatedResult.Data != null)
    {

        <div>
            <BlazorPager CurrentPage="@(paginatedResult.CurrentPage)"
                     PageCount="@paginatedResult.TotalPages"
                     VisiblePages="5"
                     ShowFirstLast="true"
                     ShowPageNumbers="true"
                     FirstText="&laquo;"
                     LastText="&raquo;"
                     NextText="&rsaquo;"
                     PreviousText="&lsaquo;"
                     OnPageChanged="(async e => { paginatedResult.CurrentPage = e; await DoFetchData();})">
            </BlazorPager>
        </div>

        <div class="table-responsive">
            <table class="table table-striped- table-bordered table-hover dataTable">
                <thead class="thead-light">
                    <tr role="row">

                        <th style="width: 80px;">
                            # Registro Sanitario
                        </th>
                        <th style="width: 150px;">
                            Medicamento
                        </th>
                        <th style="width: 150px;">
                            Principios Activos
                        </th>
                        <th style="width: 100px;">
                            Forma Farmaceutica
                        </th>
                        <th style="width: 100px;">
                            Fabricante
                        </th>

                        <th style="width: 70px;" aria-label="Actions">Actions</th>

                    </tr>
                </thead>
                <tbody>

                    @foreach (var dt in paginatedResult.Data)
                    {
                        <tr role="row">
                            <td scope="row">@dt.NumReg</td>
                            <td scope="row">@dt.Nombre</td>
                            <td scope="row">@dt.Principio</td>
                            <td scope="row">@dt.FormaFarmaceutica?.Nombre</td>
                            <td scope="row">@dt.Fabricante?.Nombre</td>
                            <td style="text-align:right">
                                <span class="dropdown">
                                    <a href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" data-toggle="dropdown" aria-expanded="true">
                                        <i class="la la-ellipsis-h"></i>
                                    </a>
                                    <span class="dropdown-menu dropdown-menu-right">
                                        <a class="dropdown-item" href="#">
                                            <i class="la la-edit"></i> Edit Details
                                        </a> <a class="dropdown-item" href="#">
                                            <i class="la la-leaf"></i> Update Status
                                        </a> <a class="dropdown-item" href="#">
                                            <i class="la la-print"></i> Generate Report
                                        </a>
                                    </span>
                                </span>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

        <div class="kt-portlet__foot">
            <BlazorPager CurrentPage="@(paginatedResult.CurrentPage)"
                     PageCount="@paginatedResult.TotalPages"
                     VisiblePages="5"
                     ShowFirstLast="true"
                     ShowPageNumbers="true"
                     FirstText="&laquo;"
                     LastText="&raquo;"
                     NextText="&rsaquo;"
                     PreviousText="&lsaquo;"
                     OnPageChanged="(async e => { paginatedResult.CurrentPage = e; await DoFetchData();})">
            </BlazorPager>
        </div>
    }

</div>

@if (addEditDialogIsOpen)
{
    <ProductAddEdit ModelData="@modelData" OnClose="@OnEventAddEditClose"></ProductAddEdit>
}

@code {

    protected PaginatedResult<AigMedicamento> paginatedResult;
    protected MedicamentFilter modelFilter;

    protected ProductObject modelData;
    protected bool addEditDialogIsOpen = false;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            paginatedResult = new PaginatedResult<AigMedicamento>();
            modelFilter = new MedicamentFilter();
            await DoFetchData();

            //var mysql = new new_schemaContext();

            //var repository=_unitOfWork.Repository<AigPais>();
            //var list=mysql.Paises.ToList();
            //foreach (var item in list)
            //{
            //    await repository.AddAsync(new AigPais(){
            //            Iso = item.IsoPais,
            //            Nombre = item.NombrePais
            //      });
            //   await _unitOfWork.CommitAsync();
            //}

            //var repository=_unitOfWork.Repository<AigFormaFarmaceutica>();
            //var list=mysql.FormaFarmaceuticas.ToList();
            //foreach (var item in list)
            //{    try
            //    {
            //         await repository.AddAsync(new AigFormaFarmaceutica(){
            //            Nombre = item.NombreFf,
            //            Estado = item.EstadoFf
            //        });
            //       await _unitOfWork.CommitAsync();
            //    }
            //    catch (Exception ex)
            //    {
            //         _systemLogger.Error(ex.Message);
            //    }
            //}

            //var repository = _unitOfWork.Repository<AigFabricante>();
            //var list = mysql.Fabricantes.ToList();
            //foreach (var item in list)
            //{
            //    try
            //    {
            //        var record = new AigFabricante();
            //        var mysqlCountry = mysql.Paises.FirstOrDefault(p => p.CodigoPais.ToString() == item.CodigoPFabricante);
            //        var country = _unitOfWork.Repository<AigPais>().GetAll().FirstOrDefault(p => p.Iso == mysqlCountry.IsoPais);
            //        record.PaisId = country.Id;
            //        record.Nombre = item.FabricanteSol;
            //        record.Correo = item.CorreoFabricante;
            //        record.Direccion = item.DireccionFabricante;
            //        await repository.AddAsync(record);
            //        await _unitOfWork.CommitAsync();
            //    }
            //    catch (Exception ex)
            //    {
            //         _systemLogger.Error(ex.Message);
            //    }

            //}


            //var repository=_unitOfWork.Repository<AigMedicamento>();
            //var list=mysql.EncaSolicituds.OrderBy(s=>s.CodigoSol).ToList();
            //foreach (var item in list)
            //{
            //    _systemLogger.Warn(item.CodigoSol);

            //    if (item.CodigoSol == 23)
            //    {
            //        ;
            //    }
            //    var record = new AigMedicamento();
            //    var f = _unitOfWork.Repository<AigFabricante>().GetAll().FirstOrDefault(p => p.Nombre.Trim().ToLower() == item.FabricanteproductoSol.Trim().ToLower());
            //    var ff = _unitOfWork.Repository<AigFormaFarmaceutica>().GetAll().FirstOrDefault(p => p.Nombre.Trim().ToLower() == item.FormafarmaceuticaSol.Trim().ToLower());
            //    if (ff != null)
            //        record.FormaFarmaceuticaId = ff.Id;
            //    else
            //    {
            //        ;
            //    }

            //    if (f != null)
            //        record.FabricanteId = f.Id;

            //    record.NumReg = !string.IsNullOrEmpty(item.NumeroRegistroIn) ? item.NumeroRegistroIn : string.Empty;
            //    record.FechaEmisiónRegistro = item.FechaSol != null ? item.FechaSol : null;
            //    record.ExpiraciónRegistro = null;
            //    record.Estado = TipoEstado.Authorised;
            //    record.Nombre = item.ProductoSol;
            //    record.Principio = item.PrincipioSol;
            //    record.Excipientes = item.ExcipientesSol;
            //    record.Concentracion = item.ConcentracionSol;
            //    record.Via = item.ViaSol;
            //    record.CondicionVenta = item.CondicionventaSol;
            //    record.TipoMedicamento = item.TipoMedicamentoSol;
            //    record.TipoEquivalencia = TipoEquivalencia.None;

            //    await repository.AddAsync(record);
            //    await _unitOfWork.CommitAsync();
            //}

        }
        catch (Exception ex)
        {
            _systemLogger.Error(ex.Message);
        }

        base.OnInitialized();
    }

    private async Task DoFetchData()
    {

        var args = new PageSearchArgs()
            {
                PageIndex = paginatedResult.CurrentPage,
                PageSize = paginatedResult.PageSize,
                SortingOptions = new() { new SortingOption { Field = "Name", Direction = SortingDirection.ASC } },
                //FilteringOptions = new() {
                //    new FilteringOption { Field = "Name", Operator= FilteringOperator.StartsWith,Value="A"},
                //    new FilteringOption { Field = "Principio", Operator= FilteringOperator.StartsWith,Value="Fin"},
                //},
            };

        paginatedResult = await _repository.ListAsync(args);
        StateHasChanged();
    }

    protected async Task OnFilter()
    {
        paginatedResult.CurrentPage = 1;
        await DoFetchData();
    }
    private async Task OnEdit(long id)
    {
        //var result = await MainService.Get(id);
        //if (result == null)
        //{
        //    result = new CurrencyFiatTB();
        //}

        modelData = new ProductObject();
        addEditDialogIsOpen = true;
        StateHasChanged();
    }

    private async Task OnEventAddEditClose(long id)
    {
        addEditDialogIsOpen = false;
        await DoFetchData();
    }

}