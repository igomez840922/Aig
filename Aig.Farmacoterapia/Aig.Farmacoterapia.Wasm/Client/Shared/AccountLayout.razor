@inherits LayoutComponentBase
<MudThemeProvider />
<MudSnackbarProvider />
<style>
    .gradient-custom-2 {
        background: #594ae2ff;
        background: -webkit-linear-gradient(to right, #594ae2, #594ae2, #7a6df6, #b076fa);
        background: linear-gradient(to right, #b076fa,#7a6df6, #594ae2, #594ae2);
    }
    
    @@media (min-width: 768px) {
        .gradient-form {
            height: 100vh !important;
        }
    }

    @@media (min-width: 769px) {
        .gradient-custom-2 {
            border-top-right-radius: .3rem;
            border-bottom-right-radius: .3rem;
        }
    }

    .footer_copyright {
        position: fixed;
        bottom: 0;
        left: 48%;
        right: 0;
        height: 30px;
    }
</style>

<MudLayout>

    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-xl-10">
                <div class="card rounded-3 text-black">
                    <div class="row g-0">
                        <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                            <div class="text-white py-4 p-md-5 mx-md-4">
                                <img width="90%" ; src="/media/logo1.png">
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card-body p-md-5 mx-md-4">
                                @Body
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <MudPaper Elevation="0" Class="footer_copyright">
        @DateTime.Now.Year &nbsp;&copy;&nbsp;
        <MudLink Target="_blank" Href="https://soaint.com" Typo="Typo.body2">SOAINT</MudLink>
    </MudPaper>

</MudLayout>

@code {
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
}
