@page "/"
@*@layout MainLayout*@
@using System.Linq
@using Aig.Farmacoterapia.Application.Dashboard.Event
@using Aig.Farmacoterapia.Application.Dashboard.Model
@using System.Globalization
@using Aig.Farmacoterapia.Application.Medicament.Model
@using Aig.Farmacoterapia.Domain.Common
@using Aig.Farmacoterapia.Domain.Entities
@using Aig.Farmacoterapia.Domain.Interfaces
@using Aig.Farmacoterapia.Infrastructure.Configuration
@using BlazorComponentBus
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Options
@inject ISystemLogger _systemLogger;
@inject IMedicamentRepository _repository;
@inject IOptions<AppConfiguration> _config;
@inject NavigationManager _navigation;

@if (loading)
{
    <MudOverlay Visible="loading" LightBackground="true" Absolute="true">
        <MudProgressCircular Size="Size.Large" Color="Color.Info" Indeterminate="true" />
    </MudOverlay>
}
else
{
      <div class="col-xl-3 custom-col-2">
                    <div class="category-sidebar cat-side mb-30">

                        <div class="panel panel-default funkyradio divshadow">
                            <div>
                                <div class="panel-body" id="menuleft">

                                    <span style="text-align:center;font-size:12pt;font-weight:bold;color:#9b9b9b;">Filtros</span>
                                   
                                    <button title="Borrar filtros" @onclick="() => OnClean()" class="action-btn f-right" href="#"><i class="fa fa-times"></i></button>
                                    <button title="Aplicar filtros" @onclick="() => OnSearch()" class="action-btn f-right" href="#"><i class="fa fa-check"></i></button>
                                    <hr style=" margin: 10px 0 10px 0!important;border-bottom: 1px solid #adcdec;"/>
                                       
                                     <div style="display:flex">
                                        <div>
                                            <MudCheckBox  TriState="true" @bind-Checked="@modelFilter.MedicalPrescription" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel"> Prescripción Médica </label>
                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.HospitalUse" Color="Color.Info"></MudCheckBox>
                                        </div>
                                        <label class="filterLabel"> Uso Hospitalario </label>
                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.PopularSale" Color="Color.Info"></MudCheckBox>
                                        </div>
                                        
                                        <label class="filterLabel"> Venta Popular </label>
                                    </div>

                                    <div style="margin-top:2px;border-top:1px solid #adcdec;margin-bottom:10px"></div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.ChemicalSynthesis" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Síntisis Química </label>
                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Orphans" Color="Color.Info"></MudCheckBox>
                                        </div>
                                        
                                        <label class="filterLabel">Huérfanos</label>

                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Homeopathic" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Homeopáticos</label>

                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox  TriState="true" @bind-Checked="@modelFilter.Phytopharmaceuticals" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Fitofármacos</label>

                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Biotechnological" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Biotecnológicos</label>

                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Biological" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Biológicos</label>

                                    </div>
                                    <div style="margin-top:2px;border-top:1px solid #adcdec;margin-bottom:10px"></div>

                                   

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Reference" Color="Color.Info"></MudCheckBox>
                                        </div>
                                        
                                        <label class="filterLabel">Referencia</label>

                                    </div>

                                    <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Interchangeable" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Intercambiable</label>

                                    </div>

                                     <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Generic" Color="Color.Info"></MudCheckBox>
                                        </div>
                                        
                                        <label class="filterLabel">Genérico</label>

                                    </div>

                                      <div style="display:flex">
                                        <div>
                                            <MudCheckBox TriState="true" @bind-Checked="@modelFilter.Mark" Color="Color.Info"></MudCheckBox>
                                        </div>
                                       
                                        <label class="filterLabel">Medicamento de Marca</label>

                                    </div>


                                </div>

                            </div>

                        </div>

                    </div>
                </div>

    <div class="col-xl-9 col-lg-9">
        <div class="pro-ful-tab">
            <div class="row">
                <div class="col-xl-4 col-lg-3 col-md-3">
                    <div class="product-02-tab" style="margin-bottom: 15px;">
                        <ul class="nav justify-content-start product-nav" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab"
                               aria-controls="home" aria-selected="true">
                                    <i class="fas fa-th-large"></i>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
                               aria-controls="profile" aria-selected="false">
                                    <i class="fas fa-bars"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>

            </div>
            <div class="product-tab-content">
                <div class="tab-content" id="myTabContent">

                    @if (paginatedResult != null && paginatedResult.Data.Count > 0)
                    {
                        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                            <div class="row">
                                @foreach (var context in paginatedResult.Data)
                                {

                                    <div class="col-xl-3 cl-lg-3 col-md-6">
                                        <div class="product-03-wrapper grey-2-bg pos-rel text-center mb-30">
                                            <div class="product-02-img pos-rel">

                                                @if (!string.IsNullOrEmpty(@context.PictureData))
                                                {
                                                    <a target="_blank" href="/details/@context.Id">
                                                        <img src="@context.PictureData" Width="350" Height="250" Elevation="25" Class="rounded-lg" />
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a href="/details/@context.Id">
                                                        <img src="assets/img/products/no-image.png" Width="350" Height="250" alt="">
                                                    </a>
                                                }

                                            </div>
                                            <div class="product-text">

                                                <h4><a href="/details/@context.Id">@context.Nombre</a></h4>
                                                <h5>@context.Principio</h5>
                                                <span>
                                                    @(!string.IsNullOrEmpty(@context.FormaFarmaceutica?.Nombre) ? @context.FormaFarmaceutica?.Nombre : "-")
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                  
                    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                         @foreach (var context in paginatedResult.Data)
                         {
                             <div class="row">
                                    <div class="col-2">
                                        <div class="product">
                                            <div class="product-img">
                                               
                                                @if (!string.IsNullOrEmpty(@context.PictureData))
                                                {
                                                    <a target="_blank" href="/details/@context.Id">
                                                        <img src="@context.PictureData" Width="250" Height="200" Elevation="25" Class="rounded-lg" />
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a href="/details/@context.Id">
                                                        <img src="assets/img/products/no-image.png" Width="250" Height="200" alt="">
                                                    </a>
                                                }

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-10">
                                        <div class="product-list-content">
                                            <div class="product-text">
                                                <h4><a href="/details/@context.Id">@context.Nombre</a></h4>
                                                <h5>@context.Principio</h5>
                                                <span>
                                                    @(!string.IsNullOrEmpty(@context.FormaFarmaceutica?.Nombre) ? @context.FormaFarmaceutica?.Nombre : "-") /
                                                    @(!string.IsNullOrEmpty(@context.ViaAdministracion?.Nombre) ? @context.ViaAdministracion?.Nombre : "-")
                                                </span>
                                               
                                              
                                            </div>
                                            
                                            <p>
                                              @context.Envase
                                            </p>
                                            
                                        </div>
                                    </div>
                                </div>
                                 <hr style="margin: 0 0 1rem 0 !important;" />
                        }
                       
                    </div>

                  }

                </div>
            </div>

            <div class="d-flex flex-column align-center" style="margin-bottom: 10px;">
                <MudPagination Size="Size.Large" Selected="@paginatedResult.CurrentPage" SelectedChanged="PageChanged" Color="Color.Info" Count="@paginatedResult.TotalPages" />
            </div>

            <div class="row">
                <div class="col-12" style="text-align: center;">
                    <span style="text-align:center; color: #6c757d !important;font-size: 16px;"> @($"{paginatedResult.StartIndex+1} al {paginatedResult.EndIndex+1} de {paginatedResult.TotalCount }")</span>
                </div>
            </div>

        </div>
    </div>
}
@code {
    protected bool loading { get; set; } = true;
    protected HomeFilter modelFilter = new HomeFilter();
    private MudPagination _mudPagination;
    private PaginatedResult<AigMedicamento> paginatedResult;
    protected async override Task OnInitializedAsync()
    {
        //Subscribe Search Event
        Bus.Subscribe<SearchChangeEvent>(SearchChangeEventHandler);
        paginatedResult = new PaginatedResult<AigMedicamento>(){PageSize=20};

        var uri = _navigation.ToAbsoluteUri(_navigation.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("term", out var _term)){
            modelFilter.Term = _term;
            await DoFetchData(modelFilter);
        }
        else
        {
           await DoFetchData();
        }
        StateHasChanged();
        base.OnInitialized();
    }
    private async void SearchChangeEventHandler(MessageArgs args)
    {
        var message = args.GetMessage<SearchChangeEvent>();
        if (message is SearchChangeEvent)
        {
            // await InvokeAsync(async () => await DoFetchData(message.Filter));
            await InvokeAsync(async () =>{
                loading = true;
                modelFilter.Term = message.Filter;
                await DoFetchData(modelFilter);
                this.StateHasChanged();
            });
        }
    }

     //public bool? MedicalPrescription { get; set; } = null;
     //   public bool? HospitalUse { get; set; } = null;
     //   public bool? PopularSale { get; set; } = null;
       
    private async Task DoFetchData(HomeFilter search=null)
    {
        loading = true;
        var sorting =new List<SortingOption>(){ new SortingOption { Field = "name", Direction = SortingDirection.ASC } };
        var filters = new List<FilteringOption>();
        if (search != null)
        {
           if (!string.IsNullOrEmpty(search.Term))
              filters.Add(new FilteringOption { Field = "term", Operator = FilteringOperator.Contains, Value = search.Term });
           if (search.MedicalPrescription!=null)
              filters.Add(new FilteringOption { Field = "MedicalPrescription", Operator = FilteringOperator.Equal, Value =search.MedicalPrescription.Value?"CP":"SP" });
           if (search.HospitalUse!=null)
              filters.Add(new FilteringOption { Field = "HospitalUse", Operator = search.HospitalUse.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="UH" });
           if (search.PopularSale!=null)
              filters.Add(new FilteringOption { Field = "PopularSale", Operator = search.PopularSale.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="VP" });
          
          if (search.ChemicalSynthesis!=null)
              filters.Add(new FilteringOption { Field = "ChemicalSynthesis", Operator = search.ChemicalSynthesis.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="SI" });
           if (search.Radiopharmaceuticals!=null)
              filters.Add(new FilteringOption { Field = "Radiopharmaceuticals", Operator = search.Radiopharmaceuticals.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="RA" });
           if (search.Orphans!=null)
              filters.Add(new FilteringOption { Field = "Orphans", Operator = search.Orphans.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="HU" });
           if (search.Homeopathic!=null)
              filters.Add(new FilteringOption { Field = "Homeopathic", Operator = search.Homeopathic.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="HO" });
           if (search.Phytopharmaceuticals!=null)
              filters.Add(new FilteringOption { Field = "Phytopharmaceuticals", Operator = search.Phytopharmaceuticals.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="FF" });
          if (search.Biotechnological!=null)
              filters.Add(new FilteringOption { Field = "Biotechnological", Operator = search.Biotechnological.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="BT" });
          if (search.Biological!=null)
              filters.Add(new FilteringOption { Field = "Biological", Operator = search.Biological.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="BI" });
          
          if (search.Interchangeable!=null)
              filters.Add(new FilteringOption { Field = "Interchangeable", Operator = search.Interchangeable.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="I" });
          if (search.Reference!=null)
              filters.Add(new FilteringOption { Field = "Referencia", Operator = search.Reference.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="R" });
          if (search.Generic!=null)
              filters.Add(new FilteringOption { Field = "Generic", Operator = search.Generic.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="G" });
          if (search.Mark!=null)
              filters.Add(new FilteringOption { Field = "Mark", Operator = search.Mark.Value? FilteringOperator.Equal:FilteringOperator.NotEqual, Value ="M" });
          
        }
        var args = new PageSearchArgs() {
                PageIndex = paginatedResult.CurrentPage,
                PageSize = paginatedResult.PageSize,
                SortingOptions = sorting,
                FilteringOptions = filters
            };
        paginatedResult = await _repository.ListAsync(args);
        loading = false;
        StateHasChanged();
    }
    private  async Task PageChanged(int i){
        paginatedResult.CurrentPage = i;
        await DoFetchData();
    }
     private async Task OnClean()
    {
         await DoFetchData();
    }
     private async Task OnSearch()
    {  
         await DoFetchData(modelFilter);
        //var path= _navigation.ToBaseRelativePath(_navigation.Uri);
        //if (!string.IsNullOrEmpty(path))
        //{modelFilter= new HomeFilter();
        //   _navigation.NavigateTo("./"); 
        //}

    }
}